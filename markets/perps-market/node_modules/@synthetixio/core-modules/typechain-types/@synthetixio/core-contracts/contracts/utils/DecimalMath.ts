/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export interface DecimalMathInterface extends utils.Interface {
  functions: {
    "PRECISION_FACTOR()": FunctionFragment;
    "UNIT()": FunctionFragment;
    "UNIT_INT()": FunctionFragment;
    "UNIT_INT128()": FunctionFragment;
    "UNIT_PRECISE()": FunctionFragment;
    "UNIT_PRECISE_INT()": FunctionFragment;
    "UNIT_PRECISE_INT128()": FunctionFragment;
    "UNIT_UINT128()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "PRECISION_FACTOR"
      | "UNIT"
      | "UNIT_INT"
      | "UNIT_INT128"
      | "UNIT_PRECISE"
      | "UNIT_PRECISE_INT"
      | "UNIT_PRECISE_INT128"
      | "UNIT_UINT128"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "PRECISION_FACTOR",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "UNIT", values?: undefined): string;
  encodeFunctionData(functionFragment: "UNIT_INT", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "UNIT_INT128",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UNIT_PRECISE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UNIT_PRECISE_INT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UNIT_PRECISE_INT128",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "UNIT_UINT128",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "PRECISION_FACTOR",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "UNIT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "UNIT_INT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "UNIT_INT128",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UNIT_PRECISE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UNIT_PRECISE_INT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UNIT_PRECISE_INT128",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "UNIT_UINT128",
    data: BytesLike
  ): Result;

  events: {};
}

export interface DecimalMath extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DecimalMathInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    PRECISION_FACTOR(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT_INT(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT_INT128(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT_PRECISE(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT_PRECISE_INT(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT_PRECISE_INT128(overrides?: CallOverrides): Promise<[BigNumber]>;

    UNIT_UINT128(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  PRECISION_FACTOR(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT_INT(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT_INT128(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT_PRECISE(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT_PRECISE_INT(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT_PRECISE_INT128(overrides?: CallOverrides): Promise<BigNumber>;

  UNIT_UINT128(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    PRECISION_FACTOR(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_INT(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_INT128(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_PRECISE(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_PRECISE_INT(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_PRECISE_INT128(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_UINT128(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    PRECISION_FACTOR(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_INT(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_INT128(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_PRECISE(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_PRECISE_INT(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_PRECISE_INT128(overrides?: CallOverrides): Promise<BigNumber>;

    UNIT_UINT128(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    PRECISION_FACTOR(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UNIT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UNIT_INT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UNIT_INT128(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UNIT_PRECISE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UNIT_PRECISE_INT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    UNIT_PRECISE_INT128(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    UNIT_UINT128(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
