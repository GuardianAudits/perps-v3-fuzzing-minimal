/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFeatureFlagModule,
  IFeatureFlagModuleInterface,
} from "../../../contracts/interfaces/IFeatureFlagModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowAll",
        type: "bool",
      },
    ],
    name: "FeatureFlagAllowAllSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "FeatureFlagAllowlistAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "FeatureFlagAllowlistRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "deniers",
        type: "address[]",
      },
    ],
    name: "FeatureFlagDeniersReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "denyAll",
        type: "bool",
      },
    ],
    name: "FeatureFlagDenyAllSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addToFeatureFlagAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
    ],
    name: "getDeniers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
    ],
    name: "getFeatureFlagAllowAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
    ],
    name: "getFeatureFlagAllowlist",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
    ],
    name: "getFeatureFlagDenyAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isFeatureAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromFeatureFlagAllowlist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "deniers",
        type: "address[]",
      },
    ],
    name: "setDeniers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "allowAll",
        type: "bool",
      },
    ],
    name: "setFeatureFlagAllowAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "feature",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "denyAll",
        type: "bool",
      },
    ],
    name: "setFeatureFlagDenyAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFeatureFlagModule__factory {
  static readonly abi = _abi;
  static createInterface(): IFeatureFlagModuleInterface {
    return new utils.Interface(_abi) as IFeatureFlagModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFeatureFlagModule {
    return new Contract(address, _abi, signerOrProvider) as IFeatureFlagModule;
  }
}
