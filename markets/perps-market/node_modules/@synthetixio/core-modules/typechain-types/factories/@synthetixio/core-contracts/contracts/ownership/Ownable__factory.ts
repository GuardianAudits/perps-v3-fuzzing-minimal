/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Ownable,
  OwnableInterface,
} from "../../../../../@synthetixio/core-contracts/contracts/ownership/Ownable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NoChange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "NotNominated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newNominatedOwner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceNomination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104c03803806104c083398101604081905261002f916100ca565b8061003861005c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100fa565b6000806040516020016100ac9060208082526023908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e4f776e61604082015262626c6560e81b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b6000602082840312156100dc57600080fd5b81516001600160a01b03811681146100f357600080fd5b9392505050565b6103b7806101096000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631627540c1461005c57806353a47bb714610071578063718fe9281461009557806379ba50971461009d5780638da5cb5b146100a5575b600080fd5b61006f61006a366004610351565b6100ad565b005b610079610170565b6040516001600160a01b03909116815260200160405180910390f35b61006f61018c565b61006f6101e0565b61007961028d565b6100b56102a6565b60006100bf6102e3565b90506001600160a01b0382166100e85760405163d92e233d60e01b815260040160405180910390fd5b60018101546001600160a01b03908116908316036101195760405163a88ee57760e01b815260040160405180910390fd5b6001810180546001600160a01b0319166001600160a01b0384169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a15050565b600061017a6102e3565b600101546001600160a01b0316919050565b60006101966102e3565b60018101549091506001600160a01b031633146101cd5760405163a0e5a0d760e01b81523360048201526024015b60405180910390fd5b60010180546001600160a01b0319169055565b60006101ea6102e3565b60018101549091506001600160a01b031633811461021d5760405163a0e5a0d760e01b81523360048201526024016101c4565b8154604080516001600160a01b03928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a181546001600160a01b039091166001600160a01b0319918216178255600190910180549091169055565b60006102976102e3565b546001600160a01b0316919050565b6102ae61028d565b6001600160a01b0316336001600160a01b0316146102e15760405163472511eb60e11b81523360048201526024016101c4565b565b6000806040516020016103339060208082526023908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e4f776e61604082015262626c6560e81b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b60006020828403121561036357600080fd5b81356001600160a01b038116811461037a57600080fd5b939250505056fea2646970667358221220eae8ef83132843d783310493d0f43bfbcfb5336024b7631cb18c2e235769cd0e64736f6c63430008160033";

type OwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ownable__factory extends ContractFactory {
  constructor(...args: OwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<Ownable> {
    return super.deploy(initialOwner, overrides || {}) as Promise<Ownable>;
  }
  override getDeployTransaction(
    initialOwner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override attach(address: string): Ownable {
    return super.attach(address) as Ownable;
  }
  override connect(signer: Signer): Ownable__factory {
    return super.connect(signer) as Ownable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnableInterface {
    return new utils.Interface(_abi) as OwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ownable {
    return new Contract(address, _abi, signerOrProvider) as Ownable;
  }
}
