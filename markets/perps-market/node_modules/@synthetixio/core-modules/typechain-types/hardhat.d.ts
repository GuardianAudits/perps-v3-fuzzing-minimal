/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessError__factory>;
    getContractFactory(
      name: "AddressError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressError__factory>;
    getContractFactory(
      name: "ChangeError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChangeError__factory>;
    getContractFactory(
      name: "InitError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitError__factory>;
    getContractFactory(
      name: "ParameterError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParameterError__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IUUPSImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUUPSImplementation__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "AbstractProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractProxy__factory>;
    getContractFactory(
      name: "UUPSImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSImplementation__factory>;
    getContractFactory(
      name: "UUPSProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSProxy__factory>;
    getContractFactory(
      name: "UUPSProxyWithOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSProxyWithOwner__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "DecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecimalMath__factory>;
    getContractFactory(
      name: "SafeCastI128",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI128__factory>;
    getContractFactory(
      name: "SafeCastI256",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI256__factory>;
    getContractFactory(
      name: "SafeCastI32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI32__factory>;
    getContractFactory(
      name: "SafeCastI56",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI56__factory>;
    getContractFactory(
      name: "SafeCastI64",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI64__factory>;
    getContractFactory(
      name: "SafeCastU128",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU128__factory>;
    getContractFactory(
      name: "SafeCastU256",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU256__factory>;
    getContractFactory(
      name: "SafeCastU32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU32__factory>;
    getContractFactory(
      name: "SafeCastU56",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU56__factory>;
    getContractFactory(
      name: "SafeCastU64",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU64__factory>;
    getContractFactory(
      name: "SetUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetUtil__factory>;
    getContractFactory(
      name: "IAssociatedSystemsModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssociatedSystemsModule__factory>;
    getContractFactory(
      name: "IDecayTokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDecayTokenModule__factory>;
    getContractFactory(
      name: "IFeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeatureFlagModule__factory>;
    getContractFactory(
      name: "INftModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INftModule__factory>;
    getContractFactory(
      name: "ISampleFeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISampleFeatureFlagModule__factory>;
    getContractFactory(
      name: "ISampleOwnedModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISampleOwnedModule__factory>;
    getContractFactory(
      name: "ITokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenModule__factory>;
    getContractFactory(
      name: "AssociatedSystemsModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssociatedSystemsModule__factory>;
    getContractFactory(
      name: "CoreModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreModule__factory>;
    getContractFactory(
      name: "DecayTokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecayTokenModule__factory>;
    getContractFactory(
      name: "FeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeatureFlagModule__factory>;
    getContractFactory(
      name: "GenericModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GenericModule__factory>;
    getContractFactory(
      name: "SampleFeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SampleFeatureFlagModule__factory>;
    getContractFactory(
      name: "SampleOwnedModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SampleOwnedModule__factory>;
    getContractFactory(
      name: "NftModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NftModule__factory>;
    getContractFactory(
      name: "OwnerModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnerModule__factory>;
    getContractFactory(
      name: "TokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenModule__factory>;
    getContractFactory(
      name: "UpgradeModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeModule__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "AssociatedSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssociatedSystem__factory>;
    getContractFactory(
      name: "FeatureFlag",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeatureFlag__factory>;

    getContractAt(
      name: "AccessError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessError>;
    getContractAt(
      name: "AddressError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressError>;
    getContractAt(
      name: "ChangeError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChangeError>;
    getContractAt(
      name: "InitError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitError>;
    getContractAt(
      name: "ParameterError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ParameterError>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IUUPSImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUUPSImplementation>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "AbstractProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractProxy>;
    getContractAt(
      name: "UUPSImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSImplementation>;
    getContractAt(
      name: "UUPSProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSProxy>;
    getContractAt(
      name: "UUPSProxyWithOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSProxyWithOwner>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "DecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecimalMath>;
    getContractAt(
      name: "SafeCastI128",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI128>;
    getContractAt(
      name: "SafeCastI256",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI256>;
    getContractAt(
      name: "SafeCastI32",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI32>;
    getContractAt(
      name: "SafeCastI56",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI56>;
    getContractAt(
      name: "SafeCastI64",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI64>;
    getContractAt(
      name: "SafeCastU128",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU128>;
    getContractAt(
      name: "SafeCastU256",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU256>;
    getContractAt(
      name: "SafeCastU32",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU32>;
    getContractAt(
      name: "SafeCastU56",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU56>;
    getContractAt(
      name: "SafeCastU64",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU64>;
    getContractAt(
      name: "SetUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SetUtil>;
    getContractAt(
      name: "IAssociatedSystemsModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssociatedSystemsModule>;
    getContractAt(
      name: "IDecayTokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDecayTokenModule>;
    getContractAt(
      name: "IFeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeatureFlagModule>;
    getContractAt(
      name: "INftModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INftModule>;
    getContractAt(
      name: "ISampleFeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISampleFeatureFlagModule>;
    getContractAt(
      name: "ISampleOwnedModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISampleOwnedModule>;
    getContractAt(
      name: "ITokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenModule>;
    getContractAt(
      name: "AssociatedSystemsModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssociatedSystemsModule>;
    getContractAt(
      name: "CoreModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreModule>;
    getContractAt(
      name: "DecayTokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecayTokenModule>;
    getContractAt(
      name: "FeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeatureFlagModule>;
    getContractAt(
      name: "GenericModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GenericModule>;
    getContractAt(
      name: "SampleFeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SampleFeatureFlagModule>;
    getContractAt(
      name: "SampleOwnedModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SampleOwnedModule>;
    getContractAt(
      name: "NftModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NftModule>;
    getContractAt(
      name: "OwnerModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnerModule>;
    getContractAt(
      name: "TokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenModule>;
    getContractAt(
      name: "UpgradeModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeModule>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "AssociatedSystem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssociatedSystem>;
    getContractAt(
      name: "FeatureFlag",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeatureFlag>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
