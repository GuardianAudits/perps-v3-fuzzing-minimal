/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  AsyncOrderCancelModule,
  AsyncOrderCancelModuleInterface,
} from "../AsyncOrderCancelModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptablePrice",
        type: "uint256",
      },
    ],
    name: "AcceptablePriceNotExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "AccountLiquidatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "which",
        type: "bytes32",
      },
    ],
    name: "FeatureUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "settlementStrategyId",
        type: "uint256",
      },
    ],
    name: "InvalidSettlementStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToUint256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint64",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum SettlementStrategy.Type",
        name: "strategyType",
        type: "uint8",
      },
    ],
    name: "SettlementStrategyNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementExpiration",
        type: "uint256",
      },
    ],
    name: "SettlementWindowExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementTime",
        type: "uint256",
      },
    ],
    name: "SettlementWindowNotOpen",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueAlreadyInSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueNotInSet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accountDebt",
        type: "uint256",
      },
    ],
    name: "AccountCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "skew",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "sizeDelta",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentFundingRate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentFundingVelocity",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "interestRate",
        type: "uint128",
      },
    ],
    name: "MarketUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "desiredPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "sizeDelta",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "settlementReward",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "trackingCode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "settler",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class AsyncOrderCancelModule__factory {
  static readonly abi = _abi;
  static createInterface(): AsyncOrderCancelModuleInterface {
    return new utils.Interface(_abi) as AsyncOrderCancelModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AsyncOrderCancelModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AsyncOrderCancelModule;
  }
}
