const GIT_COMMIT_WITH_AUTHOR_FORMAT = '%B%n-hash-%n%H%n-gitTags-%n%d%n-committerDate-%n%ci%n-authorName-%n%an%n-authorEmail-%n%ae%n-gpgStatus-%n%G?%n-gpgSigner-%n%GS';
export function setConfigChangelogCommitGitAuthor(config, gitRawCommitsOpts, writerOpts, commitCustomFormat) {
    gitRawCommitsOpts.format = GIT_COMMIT_WITH_AUTHOR_FORMAT;
    const extraCommitMsg = typeof commitCustomFormat === 'string' && commitCustomFormat !== ''
        ? commitCustomFormat.replace(/%a/g, '{{authorName}}' || '').replace(/%e/g, '{{authorEmail}}' || '')
        : `({{authorName}})`;
    writerOpts.commitPartial =
        config.writerOpts.commitPartial.replace(/\n*$/, '') + ` {{#if @root.linkReferences~}}${extraCommitMsg}{{~/if}}\n`;
}
export function setConfigChangelogCommitClientLogin(config, gitRawCommitsOpts, writerOpts, commitsSinceLastRelease, commitCustomFormat) {
    gitRawCommitsOpts.format = GIT_COMMIT_WITH_AUTHOR_FORMAT;
    const extraCommitMsg = typeof commitCustomFormat === 'string' && commitCustomFormat !== ''
        ? commitCustomFormat
            .replace(/%a/g, '{{authorName}}' || '')
            .replace(/%e/g, '{{authorEmail}}' || '')
            .replace(/%l/g, '{{userLogin}}' || '')
        : ` (@{{userLogin}})`;
    writerOpts.commitPartial = config.writerOpts.commitPartial.replace(/\n*$/, '') + `${extraCommitMsg}\n`;
    writerOpts.transform = writerOptsTransform.bind(null, config.writerOpts.transform, commitsSinceLastRelease);
}
export function writerOptsTransform(originalTransform, commitsSinceLastRelease, commit, context) {
    const extendedCommit = originalTransform(commit, context);
    if (extendedCommit) {
        const remoteCommit = commitsSinceLastRelease.find((c) => c.shortHash === commit.shortHash);
        if (remoteCommit?.login) {
            commit.userLogin = remoteCommit.login;
        }
    }
    return extendedCommit;
}
//# sourceMappingURL=writer-opts-transform.js.map