import { Package } from '@lerna-lite/core';
export declare function loadPackageLockFileWhenExists<T = any>(lockFileFolderPath: string): Promise<{
    path: string;
    json: Awaited<T>;
    lockfileVersion: number;
} | undefined>;
export declare function updateClassicLockfileVersion(pkg: Package): Promise<string | undefined>;
export declare function updateTempModernLockfileVersion(pkg: Package, projLockFileObj: any): void;
export declare function saveUpdatedLockJsonFile(filePath: string, updateLockFileObj: any): Promise<string | undefined>;
export declare function updateNpmLockFileVersion2(obj: any, pkgName: string, newVersion: string): void;
export declare function runInstallLockFileOnly(npmClient: 'npm' | 'pnpm' | 'yarn', cwd: string, npmArgs: string[]): Promise<string | undefined>;
export declare function validateFileExists(filePath: string): Promise<boolean>;
