import { EOL } from 'node:os';
import log from 'npmlog';
import { exec } from '@lerna-lite/core';
import { tempWrite } from '../utils/index.js';
export function gitCommit(message, { amend, commitHooks, signGitCommit, signoffGitCommit }, opts, dryRun = false) {
    log.silly('gitCommit', message);
    const args = ['commit'];
    if (commitHooks === false) {
        args.push('--no-verify');
    }
    if (signGitCommit) {
        args.push('--gpg-sign');
    }
    if (signoffGitCommit) {
        args.push('--signoff');
    }
    if (amend) {
        args.push('--amend', '--no-edit');
    }
    else if (message.indexOf(EOL) > -1) {
        args.push('-F', tempWrite.sync(message, 'lerna-commit.txt'));
    }
    else {
        args.push('-m', message);
    }
    log.verbose('git', args.join(' '));
    return exec('git', args, opts, dryRun);
}
//# sourceMappingURL=git-commit.js.map