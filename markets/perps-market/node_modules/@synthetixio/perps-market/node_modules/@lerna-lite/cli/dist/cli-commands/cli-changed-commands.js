import { listableOptions } from './listable/listable-options.js';
export default {
    command: 'changed',
    aliases: ['updated'],
    describe: 'List local packages that have changed since the last tagged release',
    builder: (yargs) => {
        const opts = {
            'conventional-commits': {
                hidden: true,
                type: 'boolean',
            },
            'conventional-graduate': {
                describe: 'Detect currently prereleased packages that would change to a non-prerelease version.',
            },
            'force-conventional-graduate': {
                describe: 'Always include all packages by specified by --conventional-graduate whether or not they are a prerelease or have changes since the previous version.',
                type: 'boolean',
            },
            'force-publish': {
                describe: 'Always include targeted packages when detecting changed packages, skipping default logic.',
            },
            'ignore-changes': {
                describe: [
                    'Ignore changes in files matched by glob(s) when detecting changed packages.',
                    'Pass --no-ignore-changes to completely disable.',
                ].join('\n'),
                type: 'array',
            },
            'include-merged-tags': {
                describe: 'Include tags from merged branches when detecting changed packages.',
                type: 'boolean',
            },
        };
        yargs.options(opts).group(Object.keys(opts), 'Command Options:');
        return listableOptions(yargs, 'Output Options:');
    },
    handler: async (argv) => {
        try {
            const { ChangedCommand } = await import('@lerna-lite/changed');
            new ChangedCommand(argv);
        }
        catch (err) {
            throw new Error(`"@lerna-lite/changed" is optional and was not found. Please install it with "npm install @lerna-lite/changed -D". ${err}`);
        }
    },
};
//# sourceMappingURL=cli-changed-commands.js.map