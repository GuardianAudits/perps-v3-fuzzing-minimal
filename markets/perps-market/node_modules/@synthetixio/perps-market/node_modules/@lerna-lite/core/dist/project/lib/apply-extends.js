import { readJsonSync } from 'fs-extra/esm';
import { dirname } from 'node:path';
import resolveFrom from 'resolve-from';
import { shallowExtend } from './shallow-extend.js';
import { ValidationError } from '../../validation-error.js';
export function applyExtends(config, cwd, seen = new Set()) {
    let defaultConfig = {};
    if ('extends' in config) {
        let pathToDefault;
        try {
            pathToDefault = resolveFrom(cwd, config.extends);
        }
        catch (err) {
            throw new ValidationError('ERESOLVED', 'Config .extends must be locally-resolvable', err);
        }
        if (seen.has(pathToDefault)) {
            throw new ValidationError('ECIRCULAR', 'Config .extends cannot be circular', seen);
        }
        seen.add(pathToDefault);
        defaultConfig = readJsonSync(pathToDefault, { throws: false });
        delete config.extends;
        defaultConfig = applyExtends(defaultConfig, dirname(pathToDefault), seen);
    }
    return shallowExtend(config, defaultConfig);
}
//# sourceMappingURL=apply-extends.js.map