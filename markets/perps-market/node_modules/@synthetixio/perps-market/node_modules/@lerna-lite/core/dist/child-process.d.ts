import type { Options as ExecaOptions, SyncOptions as ExacaSyncOptions, ExecaChildProcess } from 'execa';
import { Package } from './package.js';
export declare function exec(command: string, args: string[], opts?: ExecaOptions & {
    pkg?: Package;
}, dryRun?: boolean): Promise<any>;
export declare function execSync(command: string, args?: string[], opts?: ExacaSyncOptions, dryRun?: boolean): string;
export declare function spawn(command: string, args: string[], opts?: ExecaOptions & {
    pkg?: Package;
}, dryRun?: boolean): Promise<any>;
export declare function spawnStreaming(command: string, args: string[], opts?: ExecaOptions & {
    pkg?: Package;
}, prefix?: string | boolean, dryRun?: boolean): Promise<any>;
export declare function getChildProcessCount(): number;
export declare function getExitCode(result: any): any;
export declare function spawnProcess(command: string, args: string[], opts: ExecaOptions & {
    pkg?: Package;
}, dryRun?: boolean): any;
export declare function wrapError(spawned: ExecaChildProcess & {
    pkg?: Package;
}): Promise<import("execa").ExecaReturnValue<string>>;
export declare function logExecCommand(command: string, args?: string[]): string;
