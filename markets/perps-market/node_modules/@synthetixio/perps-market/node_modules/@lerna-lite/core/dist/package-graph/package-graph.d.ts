import { CyclicPackageGraphNode, PackageGraphNode } from './lib/index.js';
import { Package } from '../package.js';
export declare class PackageGraph extends Map<string, PackageGraphNode> {
    constructor(packages: Package[], graphType?: 'allDependencies' | 'allPlusPeerDependencies' | 'dependencies', localDependencies?: boolean | 'auto' | 'force' | 'explicit' | 'forceLocal');
    get rawPackageList(): Package[];
    addDependencies(filteredPackages: Package[]): Package[];
    addDependents(filteredPackages: Package[]): Package[];
    extendList(packageList: Package[], nodeProp: 'localDependencies' | 'localDependents'): Package[];
    collapseCycles(rejectCycles?: boolean): Set<CyclicPackageGraphNode>;
    prune(...candidates: PackageGraphNode[]): void;
    remove(candidateNode: PackageGraphNode): void;
}
