import log from 'npmlog';
export function deleteComplexObjectProp(object, path, sourceName) {
    if (!object || !path) {
        return object;
    }
    const props = path.split('.');
    const lastProp = props.slice(-1).pop();
    return props.reduce((obj, prop) => {
        if (lastProp !== undefined && obj?.[prop] !== undefined && prop === lastProp) {
            delete obj[prop];
            log.verbose('mutation', `Removed "${path}" field from ${sourceName || 'n/a'}.`);
        }
        else {
            return obj?.[prop];
        }
    }, object);
}
export function getComplexObjectValue(object, path) {
    if (!object || !path) {
        return object;
    }
    return path.split('.').reduce((obj, prop) => obj?.[prop], object);
}
export function isEmpty(obj) {
    return !obj || Object.keys(obj).length === 0;
}
//# sourceMappingURL=object-utils.js.map