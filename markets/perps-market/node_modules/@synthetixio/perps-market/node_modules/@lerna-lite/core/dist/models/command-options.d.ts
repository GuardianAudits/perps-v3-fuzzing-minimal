import { RemoteClientType } from './interfaces.js';
export interface ChangedCommandOption {
    conventionalCommits?: boolean;
    conventionalGraduate: boolean | string | string[];
    forceConventionalGraduate: boolean;
    forcePublish?: boolean | string | string[];
    ignoreChanges: string[];
    includeMergedTags?: boolean;
}
export interface DiffCommandOption {
    ignoreChanges: string[];
    pkgName: string;
}
export interface ExecCommandOption {
    cmd?: string;
    args?: string[];
    dryRun?: boolean;
    stream?: boolean;
    parallel?: boolean;
    noBail?: boolean;
    bail?: boolean;
    noPrefix?: boolean;
    prefix?: boolean;
    profile?: boolean;
    profileLocation?: string;
}
export interface InitCommandOption {
    exact?: boolean;
    independent?: boolean;
    useWorkspaces?: boolean;
}
export interface ListableOption {
    _: string;
    json: boolean;
    ndjson: boolean;
    all: boolean;
    a: boolean;
    long: boolean;
    l: boolean;
    p: boolean;
    parseable: boolean;
    toposort: boolean;
    graph: boolean;
}
export interface ListCommandOption {
    all?: boolean;
    graph?: boolean;
    json?: boolean;
    long?: boolean;
    ndjson?: boolean;
    parseable?: boolean;
    toposort?: boolean;
}
export interface VersionCommandOption {
    allowBranch?: string[];
    allowPeerDependenciesUpdate?: boolean;
    amend?: boolean;
    buildMetadata?: string;
    bump: 'major' | 'minor' | 'patch' | 'premajor' | 'preminor' | 'prepatch' | 'prerelease' | 'from-git' | 'from-package';
    conventionalCommits?: boolean;
    conventionalGraduate?: boolean | string;
    forceConventionalGraduate?: boolean;
    conventionalPrerelease?: boolean | string;
    conventionalBumpPrerelease?: boolean;
    changelogHeaderMessage?: string;
    changelogIncludeCommitsGitAuthor?: boolean | string;
    changelogIncludeCommitsClientLogin?: boolean | string;
    changelogPreset?: string;
    createRelease?: RemoteClientType;
    createReleaseDiscussion?: string;
    generateReleaseNotes?: boolean;
    exact?: boolean;
    independentSubpackages?: boolean;
    forcePublish?: boolean | string;
    dryRun?: boolean;
    gitTagCommand?: string;
    gitRemote: string;
    ignoreChanges?: string[];
    ignoreScripts?: boolean;
    includeMergedTags?: boolean;
    m?: string;
    message?: string;
    noChangelog?: boolean;
    changelog?: boolean;
    noCommitHooks?: boolean;
    commitHooks?: boolean;
    noGitTagVersion?: boolean;
    gitTagVersion?: boolean;
    noGranularPathspec?: boolean;
    granularPathspec?: boolean;
    noPrivate?: boolean;
    private?: boolean;
    noPush?: boolean;
    push?: boolean;
    preid?: string;
    remoteClient?: RemoteClientType;
    signGitCommit?: boolean;
    signoffGitCommit?: boolean;
    signGitTag?: boolean;
    forceGitTag?: boolean;
    tagVersionPrefix?: string;
    tagVersionSeparator?: string;
    noManuallyUpdateRootLockfile?: boolean;
    manuallyUpdateRootLockfile?: boolean;
    npmClientArgs?: string[];
    premajorVersionBump?: 'default' | 'force-patch';
    skipBumpOnlyReleases?: boolean;
    syncWorkspaceLock?: boolean;
    y?: boolean;
    yes?: boolean;
}
export interface PublishCommandOption extends VersionCommandOption {
    c?: boolean;
    canary?: boolean;
    cleanupTempFiles?: boolean;
    preid?: string;
    contents?: string;
    distTag?: string;
    legacyAuth?: string;
    preDistTag?: string;
    gitHead?: string;
    graphType: 'all' | 'dependencies';
    ignorePrepublish?: boolean;
    ignoreScripts?: boolean;
    noGranularPathspec?: boolean;
    granularPathspec?: boolean;
    otp?: string;
    publishConfigOverrides?: boolean;
    registry?: string;
    removePackageFields?: string[];
    noGitReset?: boolean;
    gitReset?: boolean;
    tempTag?: boolean;
    noVerifyAccess?: boolean;
    summaryFile?: boolean | string;
    verifyAccess?: boolean;
    y?: boolean;
    yes?: boolean;
}
export interface RunCommandOption {
    dryRun?: boolean;
    npmClient?: string;
    stream?: boolean;
    parallel?: boolean;
    noBail?: boolean;
    bail?: boolean;
    noPrefix?: boolean;
    prefix?: boolean;
    profile?: boolean;
    profileLocation?: string;
    script: string;
}
export interface WatchCommandOption {
    args?: string[];
    cmd?: string;
    noBail?: boolean;
    bail?: boolean;
    debounce?: number;
    fileDelimiter?: string;
    glob?: string;
    noPrefix?: boolean;
    prefix?: boolean;
    stream?: boolean;
    awaitWriteFinish?: boolean;
    awfPollInterval?: number;
    awfStabilityThreshold?: number;
    atomic?: boolean;
    depth?: number;
    disableGlobbing?: boolean;
    followSymlinks?: boolean;
    ignored?: string | string[];
    ignoreInitial?: boolean;
    ignorePermissionErrors?: boolean;
    interval?: number;
    usePolling?: boolean;
}
