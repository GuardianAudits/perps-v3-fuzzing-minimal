import { Package } from '../package.js';
import { ProjectConfig, RawManifest } from '../models/index.js';
export declare class Project {
    config: ProjectConfig;
    configNotFound: boolean;
    rootConfigLocation: string;
    rootPath: string;
    static PACKAGE_GLOB: string;
    static LICENSE_GLOB: string;
    constructor(cwd?: string);
    static getPackages(cwd: string): Promise<Package[]>;
    static getPackagesSync(cwd: string): string[];
    get version(): string;
    set version(val: string);
    get packageConfigs(): string[];
    get packageParentDirs(): string[];
    get manifest(): RawManifest;
    get licensePath(): string;
    get fileFinder(): (fileName: string, fileMapper: any, customGlobOpts?: any) => Promise<any>;
    getPackages(): Promise<Package[]>;
    getPackagesSync(): string[];
    getPackageLicensePaths(): Promise<string[]>;
    isIndependent(): boolean;
    json5Loader(filepath: string, content: any): any;
    serializeConfig(): Promise<string>;
}
