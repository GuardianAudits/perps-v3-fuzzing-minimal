/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export declare namespace PoolCollateralConfiguration {
  export type DataStruct = {
    collateralLimitD18: BigNumberish;
    issuanceRatioD18: BigNumberish;
  };

  export type DataStructOutput = [BigNumber, BigNumber] & {
    collateralLimitD18: BigNumber;
    issuanceRatioD18: BigNumber;
  };
}

export declare namespace MarketConfiguration {
  export type DataStruct = {
    marketId: BigNumberish;
    weightD18: BigNumberish;
    maxDebtShareValueD18: BigNumberish;
  };

  export type DataStructOutput = [BigNumber, BigNumber, BigNumber] & {
    marketId: BigNumber;
    weightD18: BigNumber;
    maxDebtShareValueD18: BigNumber;
  };
}

export interface IPoolModuleInterface extends utils.Interface {
  functions: {
    "acceptPoolOwnership(uint128)": FunctionFragment;
    "createPool(uint128,address)": FunctionFragment;
    "getMinLiquidityRatio()": FunctionFragment;
    "getNominatedPoolOwner(uint128)": FunctionFragment;
    "getPoolCollateralConfiguration(uint128,address)": FunctionFragment;
    "getPoolCollateralIssuanceRatio(uint128,address)": FunctionFragment;
    "getPoolConfiguration(uint128)": FunctionFragment;
    "getPoolName(uint128)": FunctionFragment;
    "getPoolOwner(uint128)": FunctionFragment;
    "nominatePoolOwner(address,uint128)": FunctionFragment;
    "rebalancePool(uint128,address)": FunctionFragment;
    "renouncePoolNomination(uint128)": FunctionFragment;
    "renouncePoolOwnership(uint128)": FunctionFragment;
    "revokePoolNomination(uint128)": FunctionFragment;
    "setMinLiquidityRatio(uint256)": FunctionFragment;
    "setPoolCollateralConfiguration(uint128,address,(uint256,uint256))": FunctionFragment;
    "setPoolCollateralDisabledByDefault(uint128,bool)": FunctionFragment;
    "setPoolConfiguration(uint128,(uint128,uint128,int128)[])": FunctionFragment;
    "setPoolName(uint128,string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "acceptPoolOwnership"
      | "createPool"
      | "getMinLiquidityRatio"
      | "getNominatedPoolOwner"
      | "getPoolCollateralConfiguration"
      | "getPoolCollateralIssuanceRatio"
      | "getPoolConfiguration"
      | "getPoolName"
      | "getPoolOwner"
      | "nominatePoolOwner"
      | "rebalancePool"
      | "renouncePoolNomination"
      | "renouncePoolOwnership"
      | "revokePoolNomination"
      | "setMinLiquidityRatio"
      | "setPoolCollateralConfiguration"
      | "setPoolCollateralDisabledByDefault"
      | "setPoolConfiguration"
      | "setPoolName"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "acceptPoolOwnership",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createPool",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getMinLiquidityRatio",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNominatedPoolOwner",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolCollateralConfiguration",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolCollateralIssuanceRatio",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolConfiguration",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolName",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolOwner",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "nominatePoolOwner",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "rebalancePool",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "renouncePoolNomination",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renouncePoolOwnership",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "revokePoolNomination",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinLiquidityRatio",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolCollateralConfiguration",
    values: [BigNumberish, string, PoolCollateralConfiguration.DataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolCollateralDisabledByDefault",
    values: [BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolConfiguration",
    values: [BigNumberish, MarketConfiguration.DataStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setPoolName",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptPoolOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "createPool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getMinLiquidityRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNominatedPoolOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolCollateralConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolCollateralIssuanceRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nominatePoolOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rebalancePool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renouncePoolNomination",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renouncePoolOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokePoolNomination",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMinLiquidityRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPoolCollateralConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPoolCollateralDisabledByDefault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPoolConfiguration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPoolName",
    data: BytesLike
  ): Result;

  events: {
    "PoolCollateralConfigurationUpdated(uint128,address,(uint256,uint256))": EventFragment;
    "PoolCollateralDisabledByDefaultSet(uint128,bool)": EventFragment;
    "PoolConfigurationSet(uint128,(uint128,uint128,int128)[],address)": EventFragment;
    "PoolCreated(uint128,address,address)": EventFragment;
    "PoolNameUpdated(uint128,string,address)": EventFragment;
    "PoolNominationRenounced(uint128,address)": EventFragment;
    "PoolNominationRevoked(uint128,address)": EventFragment;
    "PoolOwnerNominated(uint128,address,address)": EventFragment;
    "PoolOwnershipAccepted(uint128,address)": EventFragment;
    "PoolOwnershipRenounced(uint128,address)": EventFragment;
    "SetMinLiquidityRatio(uint256)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "PoolCollateralConfigurationUpdated"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PoolCollateralDisabledByDefaultSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolConfigurationSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolNameUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolNominationRenounced"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolNominationRevoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolOwnerNominated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolOwnershipAccepted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PoolOwnershipRenounced"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetMinLiquidityRatio"): EventFragment;
}

export interface PoolCollateralConfigurationUpdatedEventObject {
  poolId: BigNumber;
  collateralType: string;
  config: PoolCollateralConfiguration.DataStructOutput;
}
export type PoolCollateralConfigurationUpdatedEvent = TypedEvent<
  [BigNumber, string, PoolCollateralConfiguration.DataStructOutput],
  PoolCollateralConfigurationUpdatedEventObject
>;

export type PoolCollateralConfigurationUpdatedEventFilter =
  TypedEventFilter<PoolCollateralConfigurationUpdatedEvent>;

export interface PoolCollateralDisabledByDefaultSetEventObject {
  poolId: BigNumber;
  disabled: boolean;
}
export type PoolCollateralDisabledByDefaultSetEvent = TypedEvent<
  [BigNumber, boolean],
  PoolCollateralDisabledByDefaultSetEventObject
>;

export type PoolCollateralDisabledByDefaultSetEventFilter =
  TypedEventFilter<PoolCollateralDisabledByDefaultSetEvent>;

export interface PoolConfigurationSetEventObject {
  poolId: BigNumber;
  markets: MarketConfiguration.DataStructOutput[];
  sender: string;
}
export type PoolConfigurationSetEvent = TypedEvent<
  [BigNumber, MarketConfiguration.DataStructOutput[], string],
  PoolConfigurationSetEventObject
>;

export type PoolConfigurationSetEventFilter =
  TypedEventFilter<PoolConfigurationSetEvent>;

export interface PoolCreatedEventObject {
  poolId: BigNumber;
  owner: string;
  sender: string;
}
export type PoolCreatedEvent = TypedEvent<
  [BigNumber, string, string],
  PoolCreatedEventObject
>;

export type PoolCreatedEventFilter = TypedEventFilter<PoolCreatedEvent>;

export interface PoolNameUpdatedEventObject {
  poolId: BigNumber;
  name: string;
  sender: string;
}
export type PoolNameUpdatedEvent = TypedEvent<
  [BigNumber, string, string],
  PoolNameUpdatedEventObject
>;

export type PoolNameUpdatedEventFilter = TypedEventFilter<PoolNameUpdatedEvent>;

export interface PoolNominationRenouncedEventObject {
  poolId: BigNumber;
  owner: string;
}
export type PoolNominationRenouncedEvent = TypedEvent<
  [BigNumber, string],
  PoolNominationRenouncedEventObject
>;

export type PoolNominationRenouncedEventFilter =
  TypedEventFilter<PoolNominationRenouncedEvent>;

export interface PoolNominationRevokedEventObject {
  poolId: BigNumber;
  owner: string;
}
export type PoolNominationRevokedEvent = TypedEvent<
  [BigNumber, string],
  PoolNominationRevokedEventObject
>;

export type PoolNominationRevokedEventFilter =
  TypedEventFilter<PoolNominationRevokedEvent>;

export interface PoolOwnerNominatedEventObject {
  poolId: BigNumber;
  nominatedOwner: string;
  owner: string;
}
export type PoolOwnerNominatedEvent = TypedEvent<
  [BigNumber, string, string],
  PoolOwnerNominatedEventObject
>;

export type PoolOwnerNominatedEventFilter =
  TypedEventFilter<PoolOwnerNominatedEvent>;

export interface PoolOwnershipAcceptedEventObject {
  poolId: BigNumber;
  owner: string;
}
export type PoolOwnershipAcceptedEvent = TypedEvent<
  [BigNumber, string],
  PoolOwnershipAcceptedEventObject
>;

export type PoolOwnershipAcceptedEventFilter =
  TypedEventFilter<PoolOwnershipAcceptedEvent>;

export interface PoolOwnershipRenouncedEventObject {
  poolId: BigNumber;
  owner: string;
}
export type PoolOwnershipRenouncedEvent = TypedEvent<
  [BigNumber, string],
  PoolOwnershipRenouncedEventObject
>;

export type PoolOwnershipRenouncedEventFilter =
  TypedEventFilter<PoolOwnershipRenouncedEvent>;

export interface SetMinLiquidityRatioEventObject {
  minLiquidityRatio: BigNumber;
}
export type SetMinLiquidityRatioEvent = TypedEvent<
  [BigNumber],
  SetMinLiquidityRatioEventObject
>;

export type SetMinLiquidityRatioEventFilter =
  TypedEventFilter<SetMinLiquidityRatioEvent>;

export interface IPoolModule extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPoolModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    acceptPoolOwnership(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    createPool(
      requestedPoolId: BigNumberish,
      owner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getMinLiquidityRatio(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { minRatioD18: BigNumber }>;

    getNominatedPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { nominatedOwner: string }>;

    getPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      overrides?: CallOverrides
    ): Promise<
      [PoolCollateralConfiguration.DataStructOutput] & {
        config: PoolCollateralConfiguration.DataStructOutput;
      }
    >;

    getPoolCollateralIssuanceRatio(
      poolId: BigNumberish,
      collateral: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { issuanceRatioD18: BigNumber }>;

    getPoolConfiguration(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [MarketConfiguration.DataStructOutput[]] & {
        markets: MarketConfiguration.DataStructOutput[];
      }
    >;

    getPoolName(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { poolName: string }>;

    getPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { owner: string }>;

    nominatePoolOwner(
      nominatedOwner: string,
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    rebalancePool(
      poolId: BigNumberish,
      optionalCollateralType: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    renouncePoolNomination(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    renouncePoolOwnership(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    revokePoolNomination(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setMinLiquidityRatio(
      minLiquidityRatio: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      newConfig: PoolCollateralConfiguration.DataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setPoolCollateralDisabledByDefault(
      poolId: BigNumberish,
      disabled: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setPoolConfiguration(
      poolId: BigNumberish,
      marketDistribution: MarketConfiguration.DataStruct[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    setPoolName(
      poolId: BigNumberish,
      name: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  acceptPoolOwnership(
    poolId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  createPool(
    requestedPoolId: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getMinLiquidityRatio(overrides?: CallOverrides): Promise<BigNumber>;

  getNominatedPoolOwner(
    poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getPoolCollateralConfiguration(
    poolId: BigNumberish,
    collateralType: string,
    overrides?: CallOverrides
  ): Promise<PoolCollateralConfiguration.DataStructOutput>;

  getPoolCollateralIssuanceRatio(
    poolId: BigNumberish,
    collateral: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getPoolConfiguration(
    poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<MarketConfiguration.DataStructOutput[]>;

  getPoolName(poolId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  getPoolOwner(
    poolId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  nominatePoolOwner(
    nominatedOwner: string,
    poolId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  rebalancePool(
    poolId: BigNumberish,
    optionalCollateralType: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  renouncePoolNomination(
    poolId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  renouncePoolOwnership(
    poolId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  revokePoolNomination(
    poolId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setMinLiquidityRatio(
    minLiquidityRatio: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setPoolCollateralConfiguration(
    poolId: BigNumberish,
    collateralType: string,
    newConfig: PoolCollateralConfiguration.DataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setPoolCollateralDisabledByDefault(
    poolId: BigNumberish,
    disabled: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setPoolConfiguration(
    poolId: BigNumberish,
    marketDistribution: MarketConfiguration.DataStruct[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  setPoolName(
    poolId: BigNumberish,
    name: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptPoolOwnership(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    createPool(
      requestedPoolId: BigNumberish,
      owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getMinLiquidityRatio(overrides?: CallOverrides): Promise<BigNumber>;

    getNominatedPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      overrides?: CallOverrides
    ): Promise<PoolCollateralConfiguration.DataStructOutput>;

    getPoolCollateralIssuanceRatio(
      poolId: BigNumberish,
      collateral: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolConfiguration(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<MarketConfiguration.DataStructOutput[]>;

    getPoolName(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    nominatePoolOwner(
      nominatedOwner: string,
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    rebalancePool(
      poolId: BigNumberish,
      optionalCollateralType: string,
      overrides?: CallOverrides
    ): Promise<void>;

    renouncePoolNomination(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    renouncePoolOwnership(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    revokePoolNomination(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinLiquidityRatio(
      minLiquidityRatio: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      newConfig: PoolCollateralConfiguration.DataStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolCollateralDisabledByDefault(
      poolId: BigNumberish,
      disabled: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolConfiguration(
      poolId: BigNumberish,
      marketDistribution: MarketConfiguration.DataStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    setPoolName(
      poolId: BigNumberish,
      name: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "PoolCollateralConfigurationUpdated(uint128,address,(uint256,uint256))"(
      poolId?: BigNumberish | null,
      collateralType?: null,
      config?: null
    ): PoolCollateralConfigurationUpdatedEventFilter;
    PoolCollateralConfigurationUpdated(
      poolId?: BigNumberish | null,
      collateralType?: null,
      config?: null
    ): PoolCollateralConfigurationUpdatedEventFilter;

    "PoolCollateralDisabledByDefaultSet(uint128,bool)"(
      poolId?: null,
      disabled?: null
    ): PoolCollateralDisabledByDefaultSetEventFilter;
    PoolCollateralDisabledByDefaultSet(
      poolId?: null,
      disabled?: null
    ): PoolCollateralDisabledByDefaultSetEventFilter;

    "PoolConfigurationSet(uint128,(uint128,uint128,int128)[],address)"(
      poolId?: BigNumberish | null,
      markets?: null,
      sender?: string | null
    ): PoolConfigurationSetEventFilter;
    PoolConfigurationSet(
      poolId?: BigNumberish | null,
      markets?: null,
      sender?: string | null
    ): PoolConfigurationSetEventFilter;

    "PoolCreated(uint128,address,address)"(
      poolId?: BigNumberish | null,
      owner?: string | null,
      sender?: string | null
    ): PoolCreatedEventFilter;
    PoolCreated(
      poolId?: BigNumberish | null,
      owner?: string | null,
      sender?: string | null
    ): PoolCreatedEventFilter;

    "PoolNameUpdated(uint128,string,address)"(
      poolId?: BigNumberish | null,
      name?: null,
      sender?: string | null
    ): PoolNameUpdatedEventFilter;
    PoolNameUpdated(
      poolId?: BigNumberish | null,
      name?: null,
      sender?: string | null
    ): PoolNameUpdatedEventFilter;

    "PoolNominationRenounced(uint128,address)"(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolNominationRenouncedEventFilter;
    PoolNominationRenounced(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolNominationRenouncedEventFilter;

    "PoolNominationRevoked(uint128,address)"(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolNominationRevokedEventFilter;
    PoolNominationRevoked(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolNominationRevokedEventFilter;

    "PoolOwnerNominated(uint128,address,address)"(
      poolId?: BigNumberish | null,
      nominatedOwner?: string | null,
      owner?: string | null
    ): PoolOwnerNominatedEventFilter;
    PoolOwnerNominated(
      poolId?: BigNumberish | null,
      nominatedOwner?: string | null,
      owner?: string | null
    ): PoolOwnerNominatedEventFilter;

    "PoolOwnershipAccepted(uint128,address)"(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolOwnershipAcceptedEventFilter;
    PoolOwnershipAccepted(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolOwnershipAcceptedEventFilter;

    "PoolOwnershipRenounced(uint128,address)"(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolOwnershipRenouncedEventFilter;
    PoolOwnershipRenounced(
      poolId?: BigNumberish | null,
      owner?: string | null
    ): PoolOwnershipRenouncedEventFilter;

    "SetMinLiquidityRatio(uint256)"(
      minLiquidityRatio?: null
    ): SetMinLiquidityRatioEventFilter;
    SetMinLiquidityRatio(
      minLiquidityRatio?: null
    ): SetMinLiquidityRatioEventFilter;
  };

  estimateGas: {
    acceptPoolOwnership(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    createPool(
      requestedPoolId: BigNumberish,
      owner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getMinLiquidityRatio(overrides?: CallOverrides): Promise<BigNumber>;

    getNominatedPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolCollateralIssuanceRatio(
      poolId: BigNumberish,
      collateral: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolConfiguration(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolName(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    nominatePoolOwner(
      nominatedOwner: string,
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    rebalancePool(
      poolId: BigNumberish,
      optionalCollateralType: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    renouncePoolNomination(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    renouncePoolOwnership(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    revokePoolNomination(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setMinLiquidityRatio(
      minLiquidityRatio: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      newConfig: PoolCollateralConfiguration.DataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setPoolCollateralDisabledByDefault(
      poolId: BigNumberish,
      disabled: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setPoolConfiguration(
      poolId: BigNumberish,
      marketDistribution: MarketConfiguration.DataStruct[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    setPoolName(
      poolId: BigNumberish,
      name: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptPoolOwnership(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    createPool(
      requestedPoolId: BigNumberish,
      owner: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getMinLiquidityRatio(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNominatedPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolCollateralIssuanceRatio(
      poolId: BigNumberish,
      collateral: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolConfiguration(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolName(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolOwner(
      poolId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    nominatePoolOwner(
      nominatedOwner: string,
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    rebalancePool(
      poolId: BigNumberish,
      optionalCollateralType: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    renouncePoolNomination(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    renouncePoolOwnership(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    revokePoolNomination(
      poolId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setMinLiquidityRatio(
      minLiquidityRatio: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setPoolCollateralConfiguration(
      poolId: BigNumberish,
      collateralType: string,
      newConfig: PoolCollateralConfiguration.DataStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setPoolCollateralDisabledByDefault(
      poolId: BigNumberish,
      disabled: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setPoolConfiguration(
      poolId: BigNumberish,
      marketDistribution: MarketConfiguration.DataStruct[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    setPoolName(
      poolId: BigNumberish,
      name: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
