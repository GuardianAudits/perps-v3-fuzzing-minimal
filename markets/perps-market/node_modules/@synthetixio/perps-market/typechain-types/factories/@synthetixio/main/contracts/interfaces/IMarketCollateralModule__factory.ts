/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMarketCollateralModule,
  IMarketCollateralModuleInterface,
} from "../../../../../@synthetixio/main/contracts/interfaces/IMarketCollateralModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmountToDeposit",
        type: "uint256",
      },
    ],
    name: "InsufficientMarketCollateralDepositable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmountToWithdraw",
        type: "uint256",
      },
    ],
    name: "InsufficientMarketCollateralWithdrawable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "creditCapacity",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "netIssuance",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositedCollateralValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reportedDebt",
        type: "uint256",
      },
    ],
    name: "MarketCollateralDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "creditCapacity",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "netIssuance",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositedCollateralValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reportedDebt",
        type: "uint256",
      },
    ],
    name: "MarketCollateralWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "systemAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "MaximumMarketCollateralConfigured",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "configureMaximumMarketCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositMarketCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
    ],
    name: "getMarketCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountD18",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getMarketCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "valueD18",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
    ],
    name: "getMaximumMarketCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "amountD18",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawMarketCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMarketCollateralModule__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketCollateralModuleInterface {
    return new utils.Interface(_abi) as IMarketCollateralModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMarketCollateralModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IMarketCollateralModule;
  }
}
