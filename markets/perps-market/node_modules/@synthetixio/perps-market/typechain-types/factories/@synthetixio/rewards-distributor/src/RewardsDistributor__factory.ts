/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardsDistributor,
  RewardsDistributorInterface,
} from "../../../../@synthetixio/rewards-distributor/src/RewardsDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardManager_",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "poolId_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType_",
        type: "address",
      },
      {
        internalType: "address",
        name: "payoutToken_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "payoutTokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "parameter",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountLeft",
        type: "uint256",
      },
    ],
    name: "NotEnoughRewardsLeft",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SYSTEM_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralType",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "poolId_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "start_",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "duration_",
        type: "uint32",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onPositionUpdated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "poolId_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType_",
        type: "address",
      },
      {
        internalType: "address",
        name: "payoutTarget_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "payoutAmount_",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payoutToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "precision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "shouldFailPayout_",
        type: "bool",
      },
    ],
    name: "setShouldFailPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldFailPayout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006007553480156200001657600080fd5b50604051620013593803806200135983398101604081905262000039916200029d565b600080546001600160a01b03199081166001600160a01b0389811691909117909255600180546001600160801b0319166001600160801b038916179055600280548216878416179055600380549091169185169190911790556004620000a0828262000453565b5060408051600481526024810182526020810180516001600160e01b031663313ce56760e01b179052905160009182916001600160a01b03871691620000e6916200051f565b600060405180830381855afa9150503d806000811462000123576040519150601f19603f3d011682016040523d82523d6000602084013e62000128565b606091505b50915091508180156200013c575060008151115b80156200016457508360ff16818060200190518101906200015e91906200053d565b60ff1614155b15620002135760408051634bab873760e11b81526004810191909152601360448201527f7061796f7574546f6b656e446563696d616c7300000000000000000000000000606482015260806024820152603b60848201527f53706563696669656420746f6b656e20646563696d616c7320646f206e6f742060a48201527f6d617463682061637475616c20746f6b656e20646563696d616c73000000000060c482015260e40160405180910390fd5b6200022084600a62000677565b60055550620006889650505050505050565b80516001600160a01b03811681146200024a57600080fd5b919050565b805160ff811681146200024a57600080fd5b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002945781810151838201526020016200027a565b50506000910152565b60008060008060008060c08789031215620002b757600080fd5b620002c28762000232565b60208801519096506001600160801b0381168114620002e057600080fd5b9450620002f06040880162000232565b9350620003006060880162000232565b925062000310608088016200024f565b60a08801519092506001600160401b03808211156200032e57600080fd5b818901915089601f8301126200034357600080fd5b81518181111562000358576200035862000261565b604051601f8201601f19908116603f0116810190838211818310171562000383576200038362000261565b816040528281528c60208487010111156200039d57600080fd5b620003b083602083016020880162000277565b80955050505050509295509295509295565b600181811c90821680620003d757607f821691505b602082108103620003f857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044e576000816000526020600020601f850160051c81016020861015620004295750805b601f850160051c820191505b818110156200044a5782815560010162000435565b5050505b505050565b81516001600160401b038111156200046f576200046f62000261565b6200048781620004808454620003c2565b84620003fe565b602080601f831160018114620004bf5760008415620004a65750858301515b600019600386901b1c1916600185901b1785556200044a565b600085815260208120601f198616915b82811015620004f057888601518255948401946001909101908401620004cf565b50858210156200050f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516200053381846020870162000277565b9190910192915050565b6000602082840312156200055057600080fd5b6200055b826200024f565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005b95781600019048211156200059d576200059d62000562565b80851615620005ab57918102915b93841c93908002906200057d565b509250929050565b600082620005d25750600162000671565b81620005e15750600062000671565b8160018114620005fa5760028114620006055762000625565b600191505062000671565b60ff84111562000619576200061962000562565b50506001821b62000671565b5060208310610133831016604e8410600b84101617156200064a575081810a62000671565b62000656838362000578565b80600019048211156200066d576200066d62000562565b0290505b92915050565b60006200055b60ff841683620005c1565b610cc180620006986000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80635a7ff7c511610097578063d3b5dc3b11610066578063d3b5dc3b14610213578063dba251611461021c578063e824600f1461022b578063fc0c546a1461023e57600080fd5b80635a7ff7c5146101c25780639a99916f146101d5578063c13d995c146101e9578063d221e7f21461020057600080fd5b80630f4ef8a6116100d35780630f4ef8a61461014457806310e23da41461016f5780633e0dc34e146101845780634efa82b6146101af57600080fd5b806301ffc9a7146100fa57806306fdde03146101225780630effe8b514610137575b600080fd5b61010d61010836600461088a565b61024f565b60405190151581526020015b60405180910390f35b61012a610286565b60405161011991906108df565b60065461010d9060ff1681565b600054610157906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61018261017d366004610923565b610314565b005b600154610197906001600160801b031681565b6040516001600160801b039091168152602001610119565b600354610157906001600160a01b031681565b6101826101d0366004610971565b6103d8565b6101826101e33660046109ed565b50505050565b6101f260075481565b604051908152602001610119565b61010d61020e366004610a3a565b6105a7565b6101f260055481565b6101f2670de0b6b3a764000081565b600254610157906001600160a01b031681565b6003546001600160a01b0316610157565b60006001600160e01b03198216632c927f3d60e21b148061028057506001600160e01b031982166301ffc9a760e01b145b92915050565b6004805461029390610a9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102bf90610a9a565b801561030c5780601f106102e15761010080835404028352916020019161030c565b820191906000526020600020905b8154815290600101906020018083116102ef57829003601f168201915b505050505081565b600054600154604051635deebe2d60e11b81526001600160801b0390911660048201526001600160a01b039091169063bbdd7c5a90602401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610ad4565b6001600160a01b0316336001600160a01b0316146103c55760405163472511eb60e11b81523360048201526024015b60405180910390fd5b6006805460ff1916911515919091179055565b6103e06106d3565b6001546001600160801b0386811691161461040e57604051634bab873760e11b81526004016103bc90610af1565b6002546001600160a01b0385811691161461043c57604051634bab873760e11b81526004016103bc90610b53565b8260075461044a9190610bda565b6007556003546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190610bed565b90508060075411156104e957604051634787a10360e11b815260048101859052602481018290526044016103bc565b600554600090610501670de0b6b3a764000087610c06565b61050b9190610c1d565b600054604051635a7ff7c560e01b81526001600160801b038a1660048201526001600160a01b0389811660248301526044820184905267ffffffffffffffff8816606483015263ffffffff87166084830152929350911690635a7ff7c59060a401600060405180830381600087803b15801561058657600080fd5b505af115801561059a573d6000803e3d6000fd5b5050505050505050505050565b60065460009060ff16156105bd575060006106ca565b6000546001600160a01b031633146105ea5760405163472511eb60e11b81523360048201526024016103bc565b6001546001600160801b0386811691161461061857604051634bab873760e11b81526004016103bc90610af1565b6002546001600160a01b0385811691161461064657604051634bab873760e11b81526004016103bc90610b53565b6000670de0b6b3a76400006005548461065f9190610c06565b6106699190610c1d565b905060075481111561069c5760075460405163a1b1d25960e01b81526103bc918391600401918252602082015260400190565b806007546106aa9190610c3f565b6007556003546106c4906001600160a01b03168583610781565b60019150505b95945050505050565b600054600154604051635deebe2d60e11b81526001600160801b0390911660048201526001600160a01b039091169063bbdd7c5a90602401602060405180830381865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190610ad4565b6001600160a01b0316336001600160a01b03161461077f5760405163472511eb60e11b81523360048201526024016103bc565b565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916107dd9190610c52565b6000604051808303816000865af19150503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b509150915081158061084d575080511580159061084d57508080602001905181019061084b9190610c6e565b155b1561088357604051633210e1d960e01b81523060048201526001600160a01b0385166024820152604481018490526064016103bc565b5050505050565b60006020828403121561089c57600080fd5b81356001600160e01b0319811681146108b457600080fd5b9392505050565b60005b838110156108d65781810151838201526020016108be565b50506000910152565b60208152600082518060208401526108fe8160408501602087016108bb565b601f01601f19169190910160400192915050565b801515811461092057600080fd5b50565b60006020828403121561093557600080fd5b81356108b481610912565b80356001600160801b038116811461095757600080fd5b919050565b6001600160a01b038116811461092057600080fd5b600080600080600060a0868803121561098957600080fd5b61099286610940565b945060208601356109a28161095c565b935060408601359250606086013567ffffffffffffffff811681146109c657600080fd5b9150608086013563ffffffff811681146109df57600080fd5b809150509295509295909350565b60008060008060808587031215610a0357600080fd5b610a0c85610940565b9350610a1a60208601610940565b92506040850135610a2a8161095c565b9396929550929360600135925050565b600080600080600060a08688031215610a5257600080fd5b610a5b86610940565b9450610a6960208701610940565b93506040860135610a798161095c565b92506060860135610a898161095c565b949793965091946080013592915050565b600181811c90821680610aae57607f821691505b602082108103610ace57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610ae657600080fd5b81516108b48161095c565b6040808252600690820152651c1bdbdb125960d21b60608201526080602082018190526024908201527f506f6f6c20646f6573206e6f74206d617463682074686520726577617264732060a0820152631c1bdbdb60e21b60c082015260e00190565b6040808252600e908201526d636f6c6c61746572616c5479706560901b6060820152608060208201819052602b908201527f436f6c6c61746572616c20646f6573206e6f74206d617463682074686520726560a08201526a3bb0b93239903a37b5b2b760a91b60c082015260e00190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561028057610280610bc4565b600060208284031215610bff57600080fd5b5051919050565b808202811582820484141761028057610280610bc4565b600082610c3a57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561028057610280610bc4565b60008251610c648184602087016108bb565b9190910192915050565b600060208284031215610c8057600080fd5b81516108b48161091256fea2646970667358221220895c01f06e4c0637af2931d61039860f201b20fc1ad81ff62cfadd355084ccfd64736f6c63430008160033";

type RewardsDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardsDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardsDistributor__factory extends ContractFactory {
  constructor(...args: RewardsDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rewardManager_: string,
    poolId_: BigNumberish,
    collateralType_: string,
    payoutToken_: string,
    payoutTokenDecimals_: BigNumberish,
    name_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<RewardsDistributor> {
    return super.deploy(
      rewardManager_,
      poolId_,
      collateralType_,
      payoutToken_,
      payoutTokenDecimals_,
      name_,
      overrides || {}
    ) as Promise<RewardsDistributor>;
  }
  override getDeployTransaction(
    rewardManager_: string,
    poolId_: BigNumberish,
    collateralType_: string,
    payoutToken_: string,
    payoutTokenDecimals_: BigNumberish,
    name_: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      rewardManager_,
      poolId_,
      collateralType_,
      payoutToken_,
      payoutTokenDecimals_,
      name_,
      overrides || {}
    );
  }
  override attach(address: string): RewardsDistributor {
    return super.attach(address) as RewardsDistributor;
  }
  override connect(signer: Signer): RewardsDistributor__factory {
    return super.connect(signer) as RewardsDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardsDistributorInterface {
    return new utils.Interface(_abi) as RewardsDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardsDistributor {
    return new Contract(address, _abi, signerOrProvider) as RewardsDistributor;
  }
}
