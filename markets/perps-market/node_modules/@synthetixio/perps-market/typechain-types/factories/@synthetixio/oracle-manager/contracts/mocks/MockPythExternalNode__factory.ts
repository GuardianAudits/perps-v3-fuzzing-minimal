/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockPythExternalNode,
  MockPythExternalNodeInterface,
} from "../../../../../@synthetixio/oracle-manager/contracts/mocks/MockPythExternalNode";

const _abi = [
  {
    inputs: [],
    name: "OracleDataRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum NodeDefinition.NodeType",
            name: "nodeType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "parameters",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "parents",
            type: "bytes32[]",
          },
        ],
        internalType: "struct NodeDefinition.Data",
        name: "",
        type: "tuple",
      },
    ],
    name: "isValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
    ],
    name: "mockSetCurrentPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "mockSetMonthlyTolerancePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "price",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse2",
            type: "uint256",
          },
        ],
        internalType: "struct NodeOutput.Data[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "runtimeValues",
        type: "bytes32[]",
      },
    ],
    name: "process",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "price",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse2",
            type: "uint256",
          },
        ],
        internalType: "struct NodeOutput.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061065d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780633c750faf1461008f578063d2c0c0f3146100a4578063eb91d37e146100b7578063edc296fc146100c8578063f65d3e18146100dc575b600080fd5b61007a61007536600461024f565b610122565b60405190151581526020015b60405180910390f35b6100a261009d366004610280565b600055565b005b6100a26100b2366004610280565b600155565b600054604051908152602001610086565b61007a6100d636600461042f565b50600190565b6100ef6100ea3660046104d7565b610159565b60405161008691908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60006001600160e01b031982166306e7ea3960e21b148061015357506001600160e01b031982166301ffc9a760e01b145b92915050565b6101846040518060800160405280600081526020016000815260200160008152602001600081525090565b81511561021f578151603290819084906000906101a3576101a3610611565b6020026020010151036101c95760405163220f6d4360e11b815260040160405180910390fd5b62278d0060001b836000815181106101e3576101e3610611565b60200260200101510361021d5760405180608001604052806001548152602001428152602001600081526020016000815250915050610247565b505b6040518060800160405280600054815260200142815260200160008152602001600081525090505b949350505050565b60006020828403121561026157600080fd5b81356001600160e01b03198116811461027957600080fd5b9392505050565b60006020828403121561029257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102d2576102d2610299565b60405290565b6040516080810167ffffffffffffffff811182821017156102d2576102d2610299565b604051601f8201601f1916810167ffffffffffffffff8111828210171561032457610324610299565b604052919050565b600082601f83011261033d57600080fd5b813567ffffffffffffffff81111561035757610357610299565b61036a601f8201601f19166020016102fb565b81815284602083860101111561037f57600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff8211156103b6576103b6610299565b5060051b60200190565b600082601f8301126103d157600080fd5b813560206103e66103e18361039c565b6102fb565b8083825260208201915060208460051b87010193508684111561040857600080fd5b602086015b84811015610424578035835291830191830161040d565b509695505050505050565b60006020828403121561044157600080fd5b813567ffffffffffffffff8082111561045957600080fd5b908301906060828603121561046d57600080fd5b6104756102af565b8235600a811061048457600080fd5b815260208301358281111561049857600080fd5b6104a48782860161032c565b6020830152506040830135828111156104bc57600080fd5b6104c8878286016103c0565b60408301525095945050505050565b60008060008060808086880312156104ee57600080fd5b853567ffffffffffffffff8082111561050657600080fd5b818801915088601f83011261051a57600080fd5b8135602061052a6103e18361039c565b82815260079290921b8401810191818101908c84111561054957600080fd5b948201945b8386101561059d5786868e0312156105665760008081fd5b61056e6102d8565b86358152838701358482015260408088013590820152606080880135908201528252948601949082019061054e565b995050890135935050808311156105b357600080fd5b6105bf89848a0161032c565b955060408801359250808311156105d557600080fd5b6105e189848a016103c0565b945060608801359250808311156105f757600080fd5b5050610605878288016103c0565b91505092959194509250565b634e487b7160e01b600052603260045260246000fdfea26469706673582212205d5b1583afa43b995841db9b3309cf2142dc09e78c6272989977288389dad9ae64736f6c63430008160033";

type MockPythExternalNodeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPythExternalNodeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPythExternalNode__factory extends ContractFactory {
  constructor(...args: MockPythExternalNodeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MockPythExternalNode> {
    return super.deploy(overrides || {}) as Promise<MockPythExternalNode>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPythExternalNode {
    return super.attach(address) as MockPythExternalNode;
  }
  override connect(signer: Signer): MockPythExternalNode__factory {
    return super.connect(signer) as MockPythExternalNode__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPythExternalNodeInterface {
    return new utils.Interface(_abi) as MockPythExternalNodeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPythExternalNode {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockPythExternalNode;
  }
}
