/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IExternalNode,
  IExternalNodeInterface,
} from "../../../../../../@synthetixio/oracle-manager/contracts/interfaces/external/IExternalNode";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum NodeDefinition.NodeType",
            name: "nodeType",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "parameters",
            type: "bytes",
          },
          {
            internalType: "bytes32[]",
            name: "parents",
            type: "bytes32[]",
          },
        ],
        internalType: "struct NodeDefinition.Data",
        name: "nodeDefinition",
        type: "tuple",
      },
    ],
    name: "isValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "price",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse2",
            type: "uint256",
          },
        ],
        internalType: "struct NodeOutput.Data[]",
        name: "parentNodeOutputs",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "parameters",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "runtimeKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "runtimeValues",
        type: "bytes32[]",
      },
    ],
    name: "process",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "price",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "__slotAvailableForFutureUse2",
            type: "uint256",
          },
        ],
        internalType: "struct NodeOutput.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IExternalNode__factory {
  static readonly abi = _abi;
  static createInterface(): IExternalNodeInterface {
    return new utils.Interface(_abi) as IExternalNodeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExternalNode {
    return new Contract(address, _abi, signerOrProvider) as IExternalNode;
  }
}
