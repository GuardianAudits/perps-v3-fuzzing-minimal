/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISpotMarketSystem,
  ISpotMarketSystemInterface,
} from "../../../../contracts/interfaces/external/ISpotMarketSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxSynthAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "synthAmountCharged",
        type: "uint256",
      },
    ],
    name: "ExceedsMaxSynthAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxUsdAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdAmountCharged",
        type: "uint256",
      },
    ],
    name: "ExceedsMaxUsdAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "InsufficientAmountReceived",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "invalidFeeCollector",
        type: "address",
      },
    ],
    name: "InvalidFeeCollectorInterface",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMarketOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrices",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWrapperFees",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "NotNominated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "asyncFixedFee",
        type: "uint256",
      },
    ],
    name: "AsyncFixedFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "atomicFixedFee",
        type: "uint256",
      },
    ],
    name: "AtomicFixedFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralLeverage",
        type: "uint256",
      },
    ],
    name: "CollateralLeverageSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "DecayRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
    ],
    name: "FeeCollectorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nominee",
        type: "address",
      },
    ],
    name: "MarketNominationRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "MarketOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "MarketOwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skewScale",
        type: "uint256",
      },
    ],
    name: "MarketSkewScaleSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "utilizationFeeRate",
        type: "uint256",
      },
    ],
    name: "MarketUtilizationFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sharePercentage",
        type: "uint256",
      },
    ],
    name: "ReferrerShareUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "synthReturned",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collectedFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SynthBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "synthImplementation",
        type: "address",
      },
    ],
    name: "SynthImplementationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "SynthImplementationUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "buyFeedId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "sellFeedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strictStalenessTolerance",
        type: "uint256",
      },
    ],
    name: "SynthPriceDataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "synthTokenAddress",
        type: "address",
      },
    ],
    name: "SynthRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountReturned",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collectedFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SynthSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "synthetix",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "usdTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracleManager",
        type: "address",
      },
    ],
    name: "SynthetixSystemSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "transactor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fixedFeeAmount",
        type: "uint256",
      },
    ],
    name: "TransactorFixedFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "synthMarketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "wrapFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "unwrapFee",
        type: "int256",
      },
    ],
    name: "WrapperFeesSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "acceptMarketOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountReceived",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amountUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountReceived",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "buyExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxUsdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "buyExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "usdAmountCharged",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "synthOwner",
        type: "address",
      },
    ],
    name: "createSynth",
    outputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getCollateralLeverage",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralLeverage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "transactor",
        type: "address",
      },
    ],
    name: "getCustomTransactorFees",
    outputs: [
      {
        internalType: "uint256",
        name: "fixedFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getFeeCollector",
    outputs: [
      {
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getMarketFees",
    outputs: [
      {
        internalType: "uint256",
        name: "atomicFixedFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "asyncFixedFee",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "wrapFee",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "unwrapFee",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getMarketOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getMarketSkew",
    outputs: [
      {
        internalType: "int256",
        name: "marketSkew",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getMarketSkewScale",
    outputs: [
      {
        internalType: "uint256",
        name: "skewScale",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getMarketUtilizationFees",
    outputs: [
      {
        internalType: "uint256",
        name: "utilizationFeeRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "getNominatedMarketOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getPriceData",
    outputs: [
      {
        internalType: "bytes32",
        name: "buyFeedId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sellFeedId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "strictPriceStalenessTolerance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "getReferrerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "sharePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getSynth",
    outputs: [
      {
        internalType: "address",
        name: "synthAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getSynthImpl",
    outputs: [
      {
        internalType: "address",
        name: "implAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "transactionType",
        type: "uint128",
      },
      {
        internalType: "enum Price.Tolerance",
        name: "priceTolerance",
        type: "uint8",
      },
    ],
    name: "indexPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "minimumCredit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "newNominatedOwner",
        type: "address",
      },
    ],
    name: "nominateMarketOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
      {
        internalType: "enum Price.Tolerance",
        name: "stalenessTolerance",
        type: "uint8",
      },
    ],
    name: "quoteBuyExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        internalType: "enum Price.Tolerance",
        name: "stalenessTolerance",
        type: "uint8",
      },
    ],
    name: "quoteBuyExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "usdAmountCharged",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        internalType: "enum Price.Tolerance",
        name: "stalenessTolerance",
        type: "uint8",
      },
    ],
    name: "quoteSellExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
      {
        internalType: "enum Price.Tolerance",
        name: "stalenessTolerance",
        type: "uint8",
      },
    ],
    name: "quoteSellExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "synthToBurn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "renounceMarketNomination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
    ],
    name: "renounceMarketOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "reportedDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "synthAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minUsdAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "sell",
    outputs: [
      {
        internalType: "uint256",
        name: "usdAmountReceived",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountReceived",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "sellExactIn",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "usdAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSynthAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "sellExactOut",
    outputs: [
      {
        internalType: "uint256",
        name: "synthToBurn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fixedFees",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "utilizationFees",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "skewFees",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "wrapperFees",
            type: "int256",
          },
        ],
        internalType: "struct OrderFees.Data",
        name: "fees",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "asyncFixedFee",
        type: "uint256",
      },
    ],
    name: "setAsyncFixedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "atomicFixedFee",
        type: "uint256",
      },
    ],
    name: "setAtomicFixedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "collateralLeverage",
        type: "uint256",
      },
    ],
    name: "setCollateralLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "transactor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fixedFeeAmount",
        type: "uint256",
      },
    ],
    name: "setCustomTransactorFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setDecayRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "skewScale",
        type: "uint256",
      },
    ],
    name: "setMarketSkewScale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "utilizationFeeRate",
        type: "uint256",
      },
    ],
    name: "setMarketUtilizationFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "synthImplementation",
        type: "address",
      },
    ],
    name: "setSynthImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISynthetixSystem",
        name: "synthetix",
        type: "address",
      },
    ],
    name: "setSynthetix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "synthMarketId",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "wrapFee",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "unwrapFee",
        type: "int256",
      },
    ],
    name: "setWrapperFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "buyFeedId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sellFeedId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "strictPriceStalenessTolerance",
        type: "uint256",
      },
    ],
    name: "updatePriceData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sharePercentage",
        type: "uint256",
      },
    ],
    name: "updateReferrerShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "upgradeSynthImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISpotMarketSystem__factory {
  static readonly abi = _abi;
  static createInterface(): ISpotMarketSystemInterface {
    return new utils.Interface(_abi) as ISpotMarketSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISpotMarketSystem {
    return new Contract(address, _abi, signerOrProvider) as ISpotMarketSystem;
  }
}
