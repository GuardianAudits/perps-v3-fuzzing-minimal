/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPerpsAccountModule,
  IPerpsAccountModuleInterface,
} from "../../../contracts/interfaces/IPerpsAccountModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "amountDelta",
        type: "int256",
      },
    ],
    name: "InvalidAmountDelta",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amountDelta",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "CollateralModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "DebtPaid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "debt",
    outputs: [
      {
        internalType: "uint256",
        name: "accountDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "getAccountCollateralIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "getAccountOpenPositions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "getAvailableMargin",
    outputs: [
      {
        internalType: "int256",
        name: "availableMargin",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
    ],
    name: "getCollateralAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getOpenPosition",
    outputs: [
      {
        internalType: "int256",
        name: "totalPnl",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accruedFunding",
        type: "int256",
      },
      {
        internalType: "int128",
        name: "positionSize",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "owedInterest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "getOpenPositionSize",
    outputs: [
      {
        internalType: "int128",
        name: "positionSize",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "getRequiredMargins",
    outputs: [
      {
        internalType: "uint256",
        name: "requiredInitialMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredMaintenanceMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxLiquidationReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "getWithdrawableMargin",
    outputs: [
      {
        internalType: "int256",
        name: "withdrawableMargin",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "amountDelta",
        type: "int256",
      },
    ],
    name: "modifyCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "payDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "totalAccountOpenInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "totalCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPerpsAccountModule__factory {
  static readonly abi = _abi;
  static createInterface(): IPerpsAccountModuleInterface {
    return new utils.Interface(_abi) as IPerpsAccountModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPerpsAccountModule {
    return new Contract(address, _abi, signerOrProvider) as IPerpsAccountModule;
  }
}
