/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMarketEvents,
  IMarketEventsInterface,
} from "../../../contracts/interfaces/IMarketEvents";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum SettlementStrategy.Type",
        name: "strategyType",
        type: "uint8",
      },
    ],
    name: "SettlementStrategyNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "skew",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "sizeDelta",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentFundingRate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentFundingVelocity",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "interestRate",
        type: "uint128",
      },
    ],
    name: "MarketUpdated",
    type: "event",
  },
] as const;

export class IMarketEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketEventsInterface {
    return new utils.Interface(_abi) as IMarketEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMarketEvents {
    return new Contract(address, _abi, signerOrProvider) as IMarketEvents;
  }
}
