/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRewardsDistributorExternal,
  MockRewardsDistributorExternalInterface,
} from "../../../contracts/mocks/MockRewardsDistributorExternal";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardManager_",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "poolId_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType_",
        type: "address",
      },
      {
        internalType: "address",
        name: "payoutToken_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "payoutTokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "address",
        name: "authorizedExternalDistributor_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "parameter",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
    ],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountLeft",
        type: "uint256",
      },
    ],
    name: "NotEnoughRewardsLeft",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SYSTEM_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authorizedExternalDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralType",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "poolId_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "start_",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "duration_",
        type: "uint32",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onPositionUpdated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "poolId_",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "collateralType_",
        type: "address",
      },
      {
        internalType: "address",
        name: "payoutTarget_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "payoutAmount_",
        type: "uint256",
      },
    ],
    name: "payout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payoutToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "precision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "shouldFailPayout_",
        type: "bool",
      },
    ],
    name: "setShouldFailPayout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldFailPayout",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MockRewardsDistributorExternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockRewardsDistributorExternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockRewardsDistributorExternal__factory extends ContractFactory {
  constructor(...args: MockRewardsDistributorExternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rewardManager_: string,
    poolId_: BigNumberish,
    collateralType_: string,
    payoutToken_: string,
    payoutTokenDecimals_: BigNumberish,
    name_: string,
    authorizedExternalDistributor_: string,
    overrides?: Overrides & { from?: string }
  ): Promise<MockRewardsDistributorExternal> {
    return super.deploy(
      rewardManager_,
      poolId_,
      collateralType_,
      payoutToken_,
      payoutTokenDecimals_,
      name_,
      authorizedExternalDistributor_,
      overrides || {}
    ) as Promise<MockRewardsDistributorExternal>;
  }
  override getDeployTransaction(
    rewardManager_: string,
    poolId_: BigNumberish,
    collateralType_: string,
    payoutToken_: string,
    payoutTokenDecimals_: BigNumberish,
    name_: string,
    authorizedExternalDistributor_: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      rewardManager_,
      poolId_,
      collateralType_,
      payoutToken_,
      payoutTokenDecimals_,
      name_,
      authorizedExternalDistributor_,
      overrides || {}
    );
  }
  override attach(address: string): MockRewardsDistributorExternal {
    return super.attach(address) as MockRewardsDistributorExternal;
  }
  override connect(signer: Signer): MockRewardsDistributorExternal__factory {
    return super.connect(signer) as MockRewardsDistributorExternal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRewardsDistributorExternalInterface {
    return new utils.Interface(_abi) as MockRewardsDistributorExternalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRewardsDistributorExternal {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockRewardsDistributorExternal;
  }
}
