/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICollateralConfigurationModule,
  ICollateralConfigurationModuleInterface,
} from "../../../contracts/interfaces/ICollateralConfigurationModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCollateralAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "upperLimitDiscount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lowerLimitDiscount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "discountScalar",
        type: "uint256",
      },
    ],
    name: "CollateralConfigurationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "collateralLiquidateRewardRatioD18",
        type: "uint128",
      },
    ],
    name: "CollateralLiquidateRewardRatioSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "RewardDistributorRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
    ],
    name: "getCollateralConfiguration",
    outputs: [
      {
        internalType: "uint256",
        name: "maxCollateralAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
    ],
    name: "getCollateralConfigurationFull",
    outputs: [
      {
        internalType: "uint256",
        name: "maxCollateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "upperLimitDiscount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lowerLimitDiscount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "discountScalar",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralLiquidateRewardRatio",
    outputs: [
      {
        internalType: "uint128",
        name: "collateralLiquidateRewardRatioD18",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
    ],
    name: "getRegisteredDistributor",
    outputs: [
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "poolDelegatedCollateralTypes",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "distributor",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
      {
        internalType: "address[]",
        name: "poolDelegatedCollateralTypes",
        type: "address[]",
      },
    ],
    name: "registerDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "maxCollateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "upperLimitDiscount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lowerLimitDiscount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "discountScalar",
        type: "uint256",
      },
    ],
    name: "setCollateralConfiguration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "collateralLiquidateRewardRatioD18",
        type: "uint128",
      },
    ],
    name: "setCollateralLiquidateRewardRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICollateralConfigurationModule__factory {
  static readonly abi = _abi;
  static createInterface(): ICollateralConfigurationModuleInterface {
    return new utils.Interface(_abi) as ICollateralConfigurationModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICollateralConfigurationModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICollateralConfigurationModule;
  }
}
