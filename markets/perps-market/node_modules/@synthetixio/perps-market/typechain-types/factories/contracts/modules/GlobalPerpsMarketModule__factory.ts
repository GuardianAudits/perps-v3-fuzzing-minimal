/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GlobalPerpsMarketModule,
  GlobalPerpsMarketModuleInterface,
} from "../../../contracts/modules/GlobalPerpsMarketModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "invalidFeeCollector",
        type: "address",
      },
    ],
    name: "InvalidFeeCollectorInterface",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "lowUtilizationInterestRateGradient",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "highUtilizationInterestRateGradient",
        type: "uint128",
      },
    ],
    name: "InvalidInterestRateParameters",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "parameter",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "shareRatioD18",
        type: "uint256",
      },
    ],
    name: "InvalidReferrerShareRatio",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToUint256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint128",
    type: "error",
  },
  {
    inputs: [],
    name: "PositionOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
    ],
    name: "FeeCollectorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lowUtilizationInterestRateGradient",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interestRateGradientBreakpoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "highUtilizationInterestRateGradient",
        type: "uint256",
      },
    ],
    name: "InterestRateParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "superMarketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "interestRate",
        type: "uint128",
      },
    ],
    name: "InterestRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "keeperCostNodeId",
        type: "bytes32",
      },
    ],
    name: "KeeperCostNodeIdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minKeeperRewardUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minKeeperProfitRatioD18",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxKeeperRewardUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxKeeperScalingRatioD18",
        type: "uint256",
      },
    ],
    name: "KeeperRewardGuardsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "maxPositionsPerAccount",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "maxCollateralsPerAccount",
        type: "uint128",
      },
    ],
    name: "PerAccountCapsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareRatioD18",
        type: "uint256",
      },
    ],
    name: "ReferrerShareUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getFeeCollector",
    outputs: [
      {
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInterestRateParameters",
    outputs: [
      {
        internalType: "uint128",
        name: "lowUtilizationInterestRateGradient",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "interestRateGradientBreakpoint",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "highUtilizationInterestRateGradient",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeeperCostNodeId",
    outputs: [
      {
        internalType: "bytes32",
        name: "keeperCostNodeId",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKeeperRewardGuards",
    outputs: [
      {
        internalType: "uint256",
        name: "minKeeperRewardUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minKeeperProfitRatioD18",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxKeeperRewardUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxKeeperScalingRatioD18",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarkets",
    outputs: [
      {
        internalType: "uint256[]",
        name: "marketIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPerAccountCaps",
    outputs: [
      {
        internalType: "uint128",
        name: "maxPositionsPerAccount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxCollateralsPerAccount",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "getReferrerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "shareRatioD18",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedCollaterals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "supportedCollaterals",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "collateralId",
        type: "uint128",
      },
    ],
    name: "globalCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "lowUtilizationInterestRateGradient",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "interestRateGradientBreakpoint",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "highUtilizationInterestRateGradient",
        type: "uint128",
      },
    ],
    name: "setInterestRateParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minKeeperRewardUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minKeeperProfitRatioD18",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxKeeperRewardUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxKeeperScalingRatioD18",
        type: "uint256",
      },
    ],
    name: "setKeeperRewardGuards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "maxPositionsPerAccount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxCollateralsPerAccount",
        type: "uint128",
      },
    ],
    name: "setPerAccountCaps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalGlobalCollateralValue",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCollateralValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateInterestRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keeperCostNodeId",
        type: "bytes32",
      },
    ],
    name: "updateKeeperCostNodeId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shareRatioD18",
        type: "uint256",
      },
    ],
    name: "updateReferrerShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c8d806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a42dce80116100a2578063ce76756f11610071578063ce76756f1461024f578063e53427e714610257578063ec2c90161461026a578063f532208714610272578063fa0e70a71461028557600080fd5b8063a42dce80146101e4578063b4ed6320146101f7578063be0cbb5914610229578063cae77b701461023c57600080fd5b806365c5a0fe116100de57806365c5a0fe1461018c5780636809fb4d14610194578063774f7b07146101a957806396e9f7a0146101d157600080fd5b806305db8a691461011057806312fde4b71461012e5780631f4653bb1461014e57806326e77e8414610164575b600080fd5b610118610298565b60405161012591906117de565b60405180910390f35b6101366102b8565b6040516001600160a01b039091168152602001610125565b6101566102d1565b604051908152602001610125565b61016c6102e1565b604080519485526020850193909352918301526060820152608001610125565b610156610315565b6101a76101a236600461183e565b61032c565b005b6101b16103f3565b604080516001600160801b03938416815292909116602083015201610125565b6101a76101df366004611868565b610420565b6101a76101f236600461189a565b61050c565b6101ff6105b7565b604080516001600160801b0394851681529284166020840152921691810191909152606001610125565b6101a76102373660046118cc565b6105f0565b61015661024a36600461189a565b6106c7565b6101a76106f3565b61015661026536600461190f565b610752565b61011861077e565b6101a761028036600461192a565b610793565b6101a7610293366004611943565b6107da565b606060006102a461084b565b90506102b2816009016108d3565b91505090565b60006102c261084b565b546001600160a01b0316919050565b60006102db6108e7565b54919050565b60008060008060006102f161084b565b60048101546007820154600583015460089093015491989097509195509350915050565b6000610327610322610939565b610991565b905090565b610334610a77565b670de0b6b3a7640000811115610365576040516378abe13560e01b8152600481018290526024015b60405180910390fd5b6001600160a01b03821661038c5760405163d92e233d60e01b815260040160405180910390fd5b8061039561084b565b6001600160a01b038416600081815260019290920160209081526040928390209390935581519081529182018390527fa225c555f4cd21a533ad4e01eaf30153c84ca28265d954a651410d3c1e56242c910160405180910390a15050565b600080600061040061084b565b600601546001600160801b0380821695600160801b909204169350915050565b610428610a77565b818411156104945760408051634bab873760e11b8152600481019190915260166044820152751b5a5b8bdb585e12d9595c195c94995dd85c991554d160521b60648201526080602482015260096084820152680dad2dc407c40dac2f60bb1b60a482015260c40161035c565b600061049e61084b565b600481018690556007810185905560058101849055600881018390556040805187815260208101879052908101859052606081018490529091507fdc784d5448d4b3c13f36956adb978d1e276f2e0c8d37e78c262b5be7641d8b549060800160405180910390a15050505050565b610514610a77565b6001600160a01b0381161561055b57610534816305fadba560e51b610ab4565b61055b576040516259bb4560e41b81526001600160a01b038216600482015260240161035c565b8061056461084b565b80546001600160a01b0319166001600160a01b0392831617905560405190821681527f12e1d17016b94668449f97876f4a8d5cc2c19f314db337418894734037cc19d4906020015b60405180910390a150565b6000806000806105c561084b565b600b810154600c909101546001600160801b0380831697600160801b90930481169650169350915050565b6105f8610a77565b600061060261084b565b9050816001600160801b0316846001600160801b0316111561064a57604051630fdc510f60e41b81526001600160801b0380861660048301528316602482015260440161035c565b6001600160801b03848116600160801b8583169081028217600b850155600c840180546001600160801b03191693861693841790556040805192835260208301919091528101919091527f9ab1d43881e1e730680d49d0c0f0da5fa8f38afa0fa2f9cf88674531c6212ef59060600160405180910390a150505050565b60006106d161084b565b6001600160a01b03909216600090815260019290920160205250604090205490565b60006106ff6000610b8e565b50905061070a610c70565b600401546040516001600160801b038381168252909116907f13cc429774e87628617cfcb0a54da0a45b9deddfe73719fe97c353e77fc130259060200160405180910390a250565b600061075c610939565b6001600160801b03909216600090815260029290920160205250604090205490565b606061032761078b610939565b6005016108d3565b61079b610a77565b6107aa816107a76108e7565b55565b6040518181527f60cb06323d52fe6ab34750c42db77ba8dd1e013bb393edb9e1c88a88dee500a7906020016105ac565b6107e2610a77565b60006107ec61084b565b6001600160801b03848116600160801b918516918202811760068401556040805191825260208201929092529192507f3448c6d1990f2d48253b91394193cd11ce49f1653f2d03934af6d17195ffe34e910160405180910390a1505050565b6000806040516020016108b59060208082526038908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e476c6f62616c60408201527f50657270734d61726b6574436f6e66696775726174696f6e0000000000000000606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b606060006108e083610cc9565b9392505050565b6000806040516020016108b59060208082526025908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e4b6565706572604082015264436f73747360d81b606082015260800190565b6000806040516020016108b5906020808252602b908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e476c6f62616c60408201526a14195c9c1cd3585c9ad95d60aa1b606082015260800190565b60008061099c610c70565b6003908101546001600160a01b03169150830160006109ba82610d25565b905060015b818111610a6e5760006109da6109d58584610d2f565b610d41565b90506001600160801b038116610a16576001600160801b0381166000908152600288016020526040902054610a0f908761198c565b9550610a5b565b6001600160801b0381166000908152600288016020526040812054610a4a90878380610a4187610d6f565b93929190610dff565b509050610a57818861198c565b9650505b5080610a668161199f565b9150506109bf565b50505050919050565b610a7f610faa565b6001600160a01b0316336001600160a01b031614610ab25760405163472511eb60e11b815233600482015260240161035c565b565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b1790529051600091829182916001600160a01b03871691610b1591906119b8565b6000604051808303816000865af19150503d8060008114610b52576040519150601f19603f3d011682016040523d82523d6000602084013e610b57565b606091505b509150915081610b6c57600092505050610b88565b8051600003610b8057600092505050610b88565b602001519150505b92915050565b6000806000610b9b610fb4565b90506000806000610baa6105b7565b925092509250826001600160801b03166000148015610bd057506001600160801b038216155b8015610be357506001600160801b038116155b15610c09575050506001810180546001600160801b031916905554600094909350915050565b6000610c1d88610c17610939565b90611007565b50509050610c2a8561108d565b8555610c38818585856110a4565b6001860180546001600160801b0319166001600160801b03929092169182179055426002870155945494989497509395505050505050565b6000806040516020016108b5906020808252602c908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50657270734d60408201526b61726b6574466163746f727960a01b606082015260800190565b606081600001805480602002602001604051908101604052809291908181526020018280548015610d1957602002820191906000526020600020905b815481526020019060010190808311610d05575b50505050509050919050565b6000610b88825490565b60006108e0610d3e848461114f565b90565b60006001600160801b03821115610d6b57604051637d5864af60e11b815260040160405180910390fd5b5090565b60008082604051602001610de0919060408082526031908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e436f6c6c617460608201527032b930b621b7b73334b3bab930ba34b7b760791b60808201526001600160801b0391909116602082015260a00190565b60408051601f1981840301815291905280516020909101209392505050565b8454604051638d10557160e01b81526001600160801b039091166004820152600090819081906001600160a01b03871690638d10557190602401602060405180830381865afa158015610e56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7a91906119e7565b9050838015610e8857508015155b15610eca576004880154600090610ea990610ea38a856111b4565b906111d3565b9050610ec6610ebc828b600301546111e8565b8a600201546111fe565b9250505b87546002906000906001600160a01b0389169063e450d1f2906001600160801b0316848a81811115610efe57610efe611a00565b6001811115610f0f57610f0f611a00565b6040518463ffffffff1660e01b8152600401610f2d93929190611a16565b602060405180830381865afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e91906119e7565b90506000610f7c8a836111d3565b9050610f9a610f9386670de0b6b3a7640000611a5a565b82906111d3565b9550505050509550959350505050565b60006102c2611213565b6000806040516020016108b59060208082526026908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e496e7465726560408201526573745261746560d01b606082015260800190565b600080600080611015611263565b9050600061102a61102588610991565b6112ef565b611033836112ef565b61103d9190611a6d565b90506110498787611319565b92506000811361106957670de0b6b3a76400006000945094505050611086565b6110728161138e565b93506110816109d584866111b4565b945050505b9250925092565b6000611098826113b1565b8254610b88919061198c565b6000826001600160801b0316856001600160801b031610156110e5576110d36001600160801b038516866113e2565b6110de906064611a94565b9050611147565b60006110f18487611abf565b905060006111086001600160801b038516836113e2565b611113906064611a94565b9050600061112a6001600160801b038816876113e2565b611135906064611a94565b90506111418183611adf565b93505050505b949350505050565b600081158061115e5750825482115b1561117c5760405163eb9bc44760e01b815260040160405180910390fd5b6000611189600184611a5a565b90508360000181815481106111a0576111a0611aff565b906000526020600020015491505092915050565b6000816111c9670de0b6b3a764000085611b15565b6108e09190611b42565b6000670de0b6b3a76400006111c98385611b15565b60008183106111f757816108e0565b5090919050565b600081831061120d57826108e0565b50919050565b6000806040516020016108b59060208082526023908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e4f776e61604082015262626c6560e81b606082015260800190565b60008061126e610c70565b60028101546004808301546040516301eb607760e41b81526001600160801b03909116918101919091529192506001600160a01b031690631eb6077090602401602060405180830381865afa1580156112cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b291906119e7565b60006001600160ff1b03821115610d6b5760405163677c430560e11b815260040160405180910390fd5b60008061132884600501610d25565b905060015b8181116113725760006113466109d56005880184610d2f565b90506113528186611401565b61135c908561198c565b935050808061136a9061199f565b91505061132d565b506000808052600285016020526040902054611147908361198c565b600080821215610d6b5760405163029f024d60e31b815260040160405180910390fd5b6000610b886113d66113c284611433565b60018501546001600160801b0316906113e2565b6001600160801b031690565b6000670de0b6b3a76400006113f78385611a94565b6108e09190611b56565b60006108e061140f84611456565b60080154610ea361142086866114c8565b611429876116d1565b60040154906111d3565b6000610b886109d56301e187e08460020154426114509190611a5a565b906111b4565b60008082604051602001610de0919060408082526032908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50657270734d60608201527130b935b2ba21b7b73334b3bab930ba34b7b760711b60808201526001600160801b0391909116602082015260a00190565b6000806114d484611736565b905060006114e0610c70565b905061150d6040518060800160405280600081526020016000815260200160008152602001600081525090565b600085600281111561152157611521611a00565b036115a15781548354604051632a952b2d60e01b81526001600160a01b0390921691632a952b2d916115599160040190815260200190565b608060405180830381865afa158015611576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159a9190611b7c565b90506116bc565b604080516001808252818301909252600091602080830190803683375050604080516001808252818301909252929350600092915060208083019080368337019050509050717374616c656e657373546f6c6572616e636560701b8260008151811061160f5761160f611aff565b602002602001018181525050611625858861178d565b8160008151811061163857611638611aff565b602090810291909101015283548554604051636d51285f60e11b81526001600160a01b039092169163daa250be916116769186908690600401611c2c565b608060405180830381865afa158015611693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b79190611b7c565b925050505b80516116c79061138e565b9695505050505050565b60008082604051602001610de0919060408082526025908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50657270734d606082015264185c9ad95d60da1b60808201526001600160801b0391909116602082015260a00190565b60008082604051602001610de091906040808252601f908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50726963650060608201526001600160801b0391909116602082015260800190565b600060018260028111156117a3576117a3611a00565b036117b357506001820154610b88565b60028260028111156117c7576117c7611a00565b036117d6575062278d00610b88565b506000610b88565b6020808252825182820181905260009190848201906040850190845b81811015611816578351835292840192918401916001016117fa565b50909695505050505050565b80356001600160a01b038116811461183957600080fd5b919050565b6000806040838503121561185157600080fd5b61185a83611822565b946020939093013593505050565b6000806000806080858703121561187e57600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156118ac57600080fd5b6108e082611822565b80356001600160801b038116811461183957600080fd5b6000806000606084860312156118e157600080fd5b6118ea846118b5565b92506118f8602085016118b5565b9150611906604085016118b5565b90509250925092565b60006020828403121561192157600080fd5b6108e0826118b5565b60006020828403121561193c57600080fd5b5035919050565b6000806040838503121561195657600080fd5b61195f836118b5565b915061196d602084016118b5565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b8857610b88611976565b6000600182016119b1576119b1611976565b5060010190565b6000825160005b818110156119d957602081860181015185830152016119bf565b506000920191825250919050565b6000602082840312156119f957600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b6001600160801b038481168252831660208201526060810160028310611a4c57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b81810381811115610b8857610b88611976565b8181036000831280158383131683831282161715611a8d57611a8d611976565b5092915050565b6001600160801b03818116838216028082169190828114611ab757611ab7611976565b505092915050565b6001600160801b03828116828216039080821115611a8d57611a8d611976565b6001600160801b03818116838216019080821115611a8d57611a8d611976565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610b8857610b88611976565b634e487b7160e01b600052601260045260246000fd5b600082611b5157611b51611b2c565b500490565b60006001600160801b0380841680611b7057611b70611b2c565b92169190910492915050565b600060808284031215611b8e57600080fd5b6040516080810181811067ffffffffffffffff82111715611bbf57634e487b7160e01b600052604160045260246000fd5b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008151808452602080850194506020840160005b83811015611c2157815187529582019590820190600101611c05565b509495945050505050565b838152606060208201526000611c456060830185611bf0565b82810360408401526116c78185611bf056fea2646970667358221220a164220828e7cb6d7ec224ad87a51a6092f5c8c1d91268c05102f669e710a67f64736f6c63430008160033";

type GlobalPerpsMarketModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GlobalPerpsMarketModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GlobalPerpsMarketModule__factory extends ContractFactory {
  constructor(...args: GlobalPerpsMarketModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<GlobalPerpsMarketModule> {
    return super.deploy(overrides || {}) as Promise<GlobalPerpsMarketModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GlobalPerpsMarketModule {
    return super.attach(address) as GlobalPerpsMarketModule;
  }
  override connect(signer: Signer): GlobalPerpsMarketModule__factory {
    return super.connect(signer) as GlobalPerpsMarketModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GlobalPerpsMarketModuleInterface {
    return new utils.Interface(_abi) as GlobalPerpsMarketModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GlobalPerpsMarketModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GlobalPerpsMarketModule;
  }
}
