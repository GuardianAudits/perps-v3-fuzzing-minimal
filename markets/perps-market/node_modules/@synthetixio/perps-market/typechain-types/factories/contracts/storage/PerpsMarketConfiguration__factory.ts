/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PerpsMarketConfiguration,
  PerpsMarketConfigurationInterface,
} from "../../../contracts/storage/PerpsMarketConfiguration";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "settlementStrategyId",
        type: "uint256",
      },
    ],
    name: "InvalidSettlementStrategy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "maxMarketSize",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "newSideSize",
        type: "int256",
      },
    ],
    name: "MaxOpenInterestReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "maxMarketValue",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "newSideSize",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "MaxUSDOpenInterestReached",
    type: "error",
  },
] as const;

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201737467cbf77fcf33857ac02556ac122205d78427e4dde8ed70915619f471c1a64736f6c63430008160033";

type PerpsMarketConfigurationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PerpsMarketConfigurationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PerpsMarketConfiguration__factory extends ContractFactory {
  constructor(...args: PerpsMarketConfigurationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<PerpsMarketConfiguration> {
    return super.deploy(overrides || {}) as Promise<PerpsMarketConfiguration>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PerpsMarketConfiguration {
    return super.attach(address) as PerpsMarketConfiguration;
  }
  override connect(signer: Signer): PerpsMarketConfiguration__factory {
    return super.connect(signer) as PerpsMarketConfiguration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpsMarketConfigurationInterface {
    return new utils.Interface(_abi) as PerpsMarketConfigurationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpsMarketConfiguration {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PerpsMarketConfiguration;
  }
}
