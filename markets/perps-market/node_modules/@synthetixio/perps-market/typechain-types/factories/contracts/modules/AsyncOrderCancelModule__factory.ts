/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AsyncOrderCancelModule,
  AsyncOrderCancelModuleInterface,
} from "../../../contracts/modules/AsyncOrderCancelModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fillPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptablePrice",
        type: "uint256",
      },
    ],
    name: "AcceptablePriceNotExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "AccountLiquidatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "which",
        type: "bytes32",
      },
    ],
    name: "FeatureUnavailable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "settlementStrategyId",
        type: "uint256",
      },
    ],
    name: "InvalidSettlementStrategy",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderNotValid",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToUint256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint64",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum SettlementStrategy.Type",
        name: "strategyType",
        type: "uint8",
      },
    ],
    name: "SettlementStrategyNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementExpiration",
        type: "uint256",
      },
    ],
    name: "SettlementWindowExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementTime",
        type: "uint256",
      },
    ],
    name: "SettlementWindowNotOpen",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueAlreadyInSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueNotInSet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accountDebt",
        type: "uint256",
      },
    ],
    name: "AccountCharged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "skew",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "sizeDelta",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentFundingRate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "currentFundingVelocity",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "interestRate",
        type: "uint128",
      },
    ],
    name: "MarketUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "desiredPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int128",
        name: "sizeDelta",
        type: "int128",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "settlementReward",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "trackingCode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "settler",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "accountId",
        type: "uint128",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061123c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dbc9139614610030575b600080fd5b61004361003e366004611059565b610045565b005b61005c6a706572707353797374656d60a81b610130565b60008061006883610169565b60038101546004820154600783015484549496509294506000936001600160a01b0390921692638f93ca56926100a6916100a191611098565b6101d8565b6040516001600160e01b031960e085901b168152600481019290925267ffffffffffffffff166024820152604401602060405180830381865afa1580156100f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011591906110ab565b905061012a61012382610207565b848461022a565b50505050565b6101418161013c610423565b610460565b61016657604051637e023fb760e01b8152600481018290526024015b60405180910390fd5b50565b600080610175836104b0565b6002810154909250600f0b6000036101a05760405163f3ec7a9f60e01b815260040160405180910390fd5b600182015460028301546101c7916001600160801b0390811691600160801b900416610533565b90506101d382826105a3565b915091565b600067ffffffffffffffff821115610203576040516372b1c34f60e01b815260040160405180910390fd5b5090565b6000808212156102035760405163029f024d60e31b815260040160405180910390fd5b6040805160c0810182526000608082015260018401546001600160801b03600160801b820481166020840181905291168252600385015460a0830152600584015460608301526002850154600f0b92820192909252906102929061028c610627565b9061069d565b61029d8383866106dd565b60808201526060810151156103595760006102da6102be8360600151610781565b6102c7906110c4565b6102d484602001516107ab565b9061080c565b90507f0f0c4533e494a73710ef5720710448c8206681251f728460d5753f86c12004f7826020015161030f8460600151610781565b604080516001600160801b0390931683526020830191909152810183905260600160405180910390a1610357610343610423565b836060015161035061090e565b9190610967565b505b6103798360020180546fffffffffffffffffffffffffffffffff19169055565b826001016003015481602001516001600160801b031682600001516001600160801b03167f7415070016cafa6a064ae5b74d75f9968c033ce38621b3dc6d8e7a3b1e64e3ed8460a001518560800151866040015187606001516103da610423565b6040516104159594939291909485526020850193909352600f9190910b604084015260608301526001600160a01b0316608082015260a00190565b60405180910390a450505050565b600073e2c5658cc5c448b48141168f3e475df8f65a1e3e33148015610449575060143610155b1561045b575060131936013560601c90565b503390565b60008061046c846109f8565b6001810154909150610100900460ff161561048b5760009150506104aa565b600181015460ff16806104a657506104a66002820184610a51565b9150505b92915050565b60008082604051602001610514919060408082526024908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e4173796e634f606082015263393232b960e11b60808201526001600160801b0391909116602082015260a00190565b60408051601f1981840301815291905280516020909101209392505050565b60008061053f84610a76565b905061054b8184610ae8565b806002018381548110610560576105606110e0565b60009182526020909120600890910201600681015490925060ff161561059c5760405163a9f8684760e01b81526004810184905260240161015d565b5092915050565b600181015482546000916105b691611098565b905060008260020154826105ca9190611098565b9050814210156105f657604051632e7a94ab60e01b81524260048201526024810183905260440161015d565b8042111561012a57604051635c3ed51960e11b8152426004820152602481018390526044810182905260640161015d565b60008060405160200161067f906020808252602b908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e476c6f62616c60408201526a14195c9c1cd3585c9ad95d60aa1b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b6106b0826001600160801b038316610b0f565b156106d957604051633473efe560e21b81526001600160801b038216600482015260240161015d565b5050565b60006106e984846105a3565b6001840154600090610703906001600160801b0316610b27565b6001860154909150600090610720906001600160801b0316610a76565b60038301546005820154600289015492935061073f92600f0b87610b8c565b925061074b8684610c64565b6107785760038601546040516364f289a560e01b815261015d918591600401918252602082015260400190565b50509392505050565b60006001600160ff1b038211156102035760405163677c430560e11b815260040160405180910390fd5b60008082604051602001610514919060408082526021908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e4163636f756e6060820152601d60fa1b60808201526001600160801b0391909116602082015260a00190565b600080600083131561086c576000836108288660060154610781565b61083291906110f6565b9050600081131561084d5761084681610207565b9150610866565b60009150610864858361085f846110c4565b610ca7565b505b506108e5565b60008080526020859052604081205461088490610781565b905060006108928583611116565b905060008113156108af576108a986600087610ca7565b506108e2565b6108be86600061085f856110c4565b506108df816108d08860060154610781565b6108da91906110f6565b610207565b92505b50505b6104a6846108f68660060154610781565b6108ff84610781565b61090991906110f6565b610d6f565b60008060405160200161067f906020808252602c908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50657270734d60408201526b61726b6574466163746f727960a01b606082015260800190565b6002830154600480850154604051630a053e7f60e11b81526001600160801b03909116918101919091526001600160a01b038481166024830152604482018490529091169063140a7cfe906064016020604051808303816000875af11580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a91906110ab565b6040805160208101829052602560608201527f696f2e73796e7468657469782e636f72652d6d6f64756c65732e46656174757260808201526465466c616760d81b60a0820152908101829052600090819060c001610514565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b60008082604051602001610514919060408082526032908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50657270734d60608201527130b935b2ba21b7b73334b3bab930ba34b7b760711b60808201526001600160801b0391909116602082015260a00190565b600282015481106106d95760405163a9f8684760e01b81526004810182905260240161015d565b60008181526001830160205260408120541515610a6f565b60008082604051602001610514919060408082526025908201527f696f2e73796e7468657469782e70657270732d6d61726b65742e50657270734d606082015264185c9ad95d60da1b60808201526001600160801b0391909116602082015260a00190565b600083600003610b9d575080610c5c565b6000610bb2610bab86610781565b8790610da2565b90506000610bc4600f86900b88611116565b90506000610bdb610bd488610781565b8390610da2565b90506000610bf284610bec88610781565b90610dc1565b610bfb87610781565b610c059190611116565b90506000610c1683610bec89610781565b610c1f88610781565b610c299190611116565b9050610c54610c41670de0b6b3a7640000600261113e565b610c4e6108da8486611116565b90610dd6565b955050505050505b949350505050565b6002820154600090600f0b81128015610c805750600383015482115b80610a6f575060028301546000600f9190910b128015610a6f575050600391909101541190565b6001600160801b038216600090815260208490526040812054610cd9908390610ccf90610781565b6108da9190611116565b6001600160801b0384166000818152602087905260408120839055919250610d05906002870190610b0f565b9050600082118015610d15575080155b15610d3557610d30600286016001600160801b038616610df5565b610d5b565b81158015610d405750805b15610d5b57610d5b600286016001600160801b038616610dff565b6107788484610d68610627565b9190610e09565b6000610d8282610ccf8560060154610781565b6006840155610d9982610d93610627565b90610ebf565b50506006015490565b600081610db7670de0b6b3a764000085611155565b610a6f919061119b565b6000670de0b6b3a7640000610db78385611155565b600081610deb670de0b6b3a76400008561113e565b610a6f91906111c9565b6106d98282610f01565b6106d98282610f5a565b6001600160801b0382166000908152600284016020526040812054610e33908390610ccf90610781565b6001600160801b03841660008181526002870160205260408120839055919250610e61906003870190610b0f565b9050600082118015610e71575080155b15610e9157610e8c600386016001600160801b038616610df5565b610eb7565b81158015610e9c5750805b15610eb757610eb7600386016001600160801b038616610dff565b509392505050565b600081610ecf8460070154610781565b610ed99190611116565b905060008112610ef157610eec81610207565b610ef4565b60005b8360070181905550505050565b600081815260018301602052604090205415610f305760405163682ad32d60e01b815260040160405180910390fd5b81546001818101845560008481526020808220909301849055845493815293019052604090912055565b600081815260018301602052604081205490819003610f8c5760405163b3dbc29360e01b815260040160405180910390fd5b6000610f996001836111dd565b8454909150600090610fad906001906111dd565b9050808214611012576000856000018281548110610fcd57610fcd6110e0565b9060005260206000200154905080866000018481548110610ff057610ff06110e0565b6000918252602080832090910192909255918252600187019052604090208390555b8454859080611023576110236111f0565b60019003818190600052602060002001600090559055846001016000858152602001908152602001600020600090555050505050565b60006020828403121561106b57600080fd5b81356001600160801b0381168114610a6f57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104aa576104aa611082565b6000602082840312156110bd57600080fd5b5051919050565b6000600160ff1b82016110d9576110d9611082565b5060000390565b634e487b7160e01b600052603260045260246000fd5b818103600083128015838313168383128216171561059c5761059c611082565b808201828112600083128015821682158216171561113657611136611082565b505092915050565b80820281158282048414176104aa576104aa611082565b80820260008212600160ff1b8414161561117157611171611082565b81810583148215176104aa576104aa611082565b634e487b7160e01b600052601260045260246000fd5b6000826111aa576111aa611185565b600160ff1b8214600019841416156111c4576111c4611082565b500590565b6000826111d8576111d8611185565b500490565b818103818111156104aa576104aa611082565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220451112aecb642ae4c1d653663ae1f3d9b1ff56756bd6e4151074f7c683e8e86064736f6c63430008160033";

type AsyncOrderCancelModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AsyncOrderCancelModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AsyncOrderCancelModule__factory extends ContractFactory {
  constructor(...args: AsyncOrderCancelModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AsyncOrderCancelModule> {
    return super.deploy(overrides || {}) as Promise<AsyncOrderCancelModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AsyncOrderCancelModule {
    return super.attach(address) as AsyncOrderCancelModule;
  }
  override connect(signer: Signer): AsyncOrderCancelModule__factory {
    return super.connect(signer) as AsyncOrderCancelModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AsyncOrderCancelModuleInterface {
    return new utils.Interface(_abi) as AsyncOrderCancelModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AsyncOrderCancelModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AsyncOrderCancelModule;
  }
}
