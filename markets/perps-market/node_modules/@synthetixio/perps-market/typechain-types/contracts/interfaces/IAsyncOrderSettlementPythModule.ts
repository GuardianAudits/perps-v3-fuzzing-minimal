/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface IAsyncOrderSettlementPythModuleInterface
  extends utils.Interface {
  functions: {
    "settleOrder(uint128)": FunctionFragment;
  };

  getFunction(nameOrSignatureOrTopic: "settleOrder"): FunctionFragment;

  encodeFunctionData(
    functionFragment: "settleOrder",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "settleOrder",
    data: BytesLike
  ): Result;

  events: {
    "InterestCharged(uint128,uint256)": EventFragment;
    "OrderSettled(uint128,uint128,uint256,int256,int256,int128,int128,uint256,uint256,uint256,uint256,bytes32,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "InterestCharged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OrderSettled"): EventFragment;
}

export interface InterestChargedEventObject {
  accountId: BigNumber;
  interest: BigNumber;
}
export type InterestChargedEvent = TypedEvent<
  [BigNumber, BigNumber],
  InterestChargedEventObject
>;

export type InterestChargedEventFilter = TypedEventFilter<InterestChargedEvent>;

export interface OrderSettledEventObject {
  marketId: BigNumber;
  accountId: BigNumber;
  fillPrice: BigNumber;
  pnl: BigNumber;
  accruedFunding: BigNumber;
  sizeDelta: BigNumber;
  newSize: BigNumber;
  totalFees: BigNumber;
  referralFees: BigNumber;
  collectedFees: BigNumber;
  settlementReward: BigNumber;
  trackingCode: string;
  settler: string;
}
export type OrderSettledEvent = TypedEvent<
  [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    string
  ],
  OrderSettledEventObject
>;

export type OrderSettledEventFilter = TypedEventFilter<OrderSettledEvent>;

export interface IAsyncOrderSettlementPythModule extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IAsyncOrderSettlementPythModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    settleOrder(
      accountId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  settleOrder(
    accountId: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    settleOrder(
      accountId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "InterestCharged(uint128,uint256)"(
      accountId?: BigNumberish | null,
      interest?: null
    ): InterestChargedEventFilter;
    InterestCharged(
      accountId?: BigNumberish | null,
      interest?: null
    ): InterestChargedEventFilter;

    "OrderSettled(uint128,uint128,uint256,int256,int256,int128,int128,uint256,uint256,uint256,uint256,bytes32,address)"(
      marketId?: BigNumberish | null,
      accountId?: BigNumberish | null,
      fillPrice?: null,
      pnl?: null,
      accruedFunding?: null,
      sizeDelta?: null,
      newSize?: null,
      totalFees?: null,
      referralFees?: null,
      collectedFees?: null,
      settlementReward?: null,
      trackingCode?: BytesLike | null,
      settler?: null
    ): OrderSettledEventFilter;
    OrderSettled(
      marketId?: BigNumberish | null,
      accountId?: BigNumberish | null,
      fillPrice?: null,
      pnl?: null,
      accruedFunding?: null,
      sizeDelta?: null,
      newSize?: null,
      totalFees?: null,
      referralFees?: null,
      collectedFees?: null,
      settlementReward?: null,
      trackingCode?: BytesLike | null,
      settler?: null
    ): OrderSettledEventFilter;
  };

  estimateGas: {
    settleOrder(
      accountId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    settleOrder(
      accountId: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
