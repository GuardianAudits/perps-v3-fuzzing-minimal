/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface IMarketEventsInterface extends utils.Interface {
  functions: {};

  events: {
    "MarketUpdated(uint128,uint256,int256,uint256,int256,int256,int256,uint128)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MarketUpdated"): EventFragment;
}

export interface MarketUpdatedEventObject {
  marketId: BigNumber;
  price: BigNumber;
  skew: BigNumber;
  size: BigNumber;
  sizeDelta: BigNumber;
  currentFundingRate: BigNumber;
  currentFundingVelocity: BigNumber;
  interestRate: BigNumber;
}
export type MarketUpdatedEvent = TypedEvent<
  [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ],
  MarketUpdatedEventObject
>;

export type MarketUpdatedEventFilter = TypedEventFilter<MarketUpdatedEvent>;

export interface IMarketEvents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IMarketEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "MarketUpdated(uint128,uint256,int256,uint256,int256,int256,int256,uint128)"(
      marketId?: null,
      price?: null,
      skew?: null,
      size?: null,
      sizeDelta?: null,
      currentFundingRate?: null,
      currentFundingVelocity?: null,
      interestRate?: null
    ): MarketUpdatedEventFilter;
    MarketUpdated(
      marketId?: null,
      price?: null,
      skew?: null,
      size?: null,
      sizeDelta?: null,
      currentFundingRate?: null,
      currentFundingVelocity?: null,
      interestRate?: null
    ): MarketUpdatedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
