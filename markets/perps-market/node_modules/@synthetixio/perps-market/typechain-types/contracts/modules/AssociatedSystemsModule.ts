/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export interface AssociatedSystemsModuleInterface extends utils.Interface {
  functions: {
    "getAssociatedSystem(bytes32)": FunctionFragment;
    "initOrUpgradeNft(bytes32,string,string,string,address)": FunctionFragment;
    "initOrUpgradeToken(bytes32,string,string,uint8,address)": FunctionFragment;
    "registerUnmanagedSystem(bytes32,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getAssociatedSystem"
      | "initOrUpgradeNft"
      | "initOrUpgradeToken"
      | "registerUnmanagedSystem"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getAssociatedSystem",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initOrUpgradeNft",
    values: [BytesLike, string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initOrUpgradeToken",
    values: [BytesLike, string, string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "registerUnmanagedSystem",
    values: [BytesLike, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAssociatedSystem",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initOrUpgradeNft",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initOrUpgradeToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerUnmanagedSystem",
    data: BytesLike
  ): Result;

  events: {
    "AssociatedSystemSet(bytes32,bytes32,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AssociatedSystemSet"): EventFragment;
}

export interface AssociatedSystemSetEventObject {
  kind: string;
  id: string;
  proxy: string;
  impl: string;
}
export type AssociatedSystemSetEvent = TypedEvent<
  [string, string, string, string],
  AssociatedSystemSetEventObject
>;

export type AssociatedSystemSetEventFilter =
  TypedEventFilter<AssociatedSystemSetEvent>;

export interface AssociatedSystemsModule extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AssociatedSystemsModuleInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAssociatedSystem(
      id: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, string] & { addr: string; kind: string }>;

    initOrUpgradeNft(
      id: BytesLike,
      name: string,
      symbol: string,
      uri: string,
      impl: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    initOrUpgradeToken(
      id: BytesLike,
      name: string,
      symbol: string,
      decimals: BigNumberish,
      impl: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    registerUnmanagedSystem(
      id: BytesLike,
      endpoint: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  getAssociatedSystem(
    id: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, string] & { addr: string; kind: string }>;

  initOrUpgradeNft(
    id: BytesLike,
    name: string,
    symbol: string,
    uri: string,
    impl: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  initOrUpgradeToken(
    id: BytesLike,
    name: string,
    symbol: string,
    decimals: BigNumberish,
    impl: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  registerUnmanagedSystem(
    id: BytesLike,
    endpoint: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    getAssociatedSystem(
      id: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, string] & { addr: string; kind: string }>;

    initOrUpgradeNft(
      id: BytesLike,
      name: string,
      symbol: string,
      uri: string,
      impl: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initOrUpgradeToken(
      id: BytesLike,
      name: string,
      symbol: string,
      decimals: BigNumberish,
      impl: string,
      overrides?: CallOverrides
    ): Promise<void>;

    registerUnmanagedSystem(
      id: BytesLike,
      endpoint: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AssociatedSystemSet(bytes32,bytes32,address,address)"(
      kind?: BytesLike | null,
      id?: BytesLike | null,
      proxy?: null,
      impl?: null
    ): AssociatedSystemSetEventFilter;
    AssociatedSystemSet(
      kind?: BytesLike | null,
      id?: BytesLike | null,
      proxy?: null,
      impl?: null
    ): AssociatedSystemSetEventFilter;
  };

  estimateGas: {
    getAssociatedSystem(
      id: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initOrUpgradeNft(
      id: BytesLike,
      name: string,
      symbol: string,
      uri: string,
      impl: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    initOrUpgradeToken(
      id: BytesLike,
      name: string,
      symbol: string,
      decimals: BigNumberish,
      impl: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    registerUnmanagedSystem(
      id: BytesLike,
      endpoint: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAssociatedSystem(
      id: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initOrUpgradeNft(
      id: BytesLike,
      name: string,
      symbol: string,
      uri: string,
      impl: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    initOrUpgradeToken(
      id: BytesLike,
      name: string,
      symbol: string,
      decimals: BigNumberish,
      impl: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    registerUnmanagedSystem(
      id: BytesLike,
      endpoint: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
