/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessError__factory>;
    getContractFactory(
      name: "AddressError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressError__factory>;
    getContractFactory(
      name: "ArrayError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArrayError__factory>;
    getContractFactory(
      name: "ChangeError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChangeError__factory>;
    getContractFactory(
      name: "InitError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitError__factory>;
    getContractFactory(
      name: "ParameterError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParameterError__factory>;
    getContractFactory(
      name: "IConfigurable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConfigurable__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IUUPSImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUUPSImplementation__factory>;
    getContractFactory(
      name: "InitializableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitializableMock__factory>;
    getContractFactory(
      name: "ImplementationDestroyer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationDestroyer__factory>;
    getContractFactory(
      name: "ImplementationMockA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationMockA__factory>;
    getContractFactory(
      name: "ImplementationMockB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImplementationMockB__factory>;
    getContractFactory(
      name: "UUPSImplementationMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSImplementationMock__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "ERC20PermitMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20PermitMock__factory>;
    getContractFactory(
      name: "ERC721EnumerableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721EnumerableMock__factory>;
    getContractFactory(
      name: "ERC721FailedReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721FailedReceiverMock__factory>;
    getContractFactory(
      name: "ERC721Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Mock__factory>;
    getContractFactory(
      name: "ERC721OwnedMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721OwnedMock__factory>;
    getContractFactory(
      name: "ERC721ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ReceiverMock__factory>;
    getContractFactory(
      name: "ERC721RevertingReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RevertingReceiverMock__factory>;
    getContractFactory(
      name: "VaultMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultMock__factory>;
    getContractFactory(
      name: "AddressUtilMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressUtilMock__factory>;
    getContractFactory(
      name: "ConfigurableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfigurableMock__factory>;
    getContractFactory(
      name: "DecimalMathMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecimalMathMock__factory>;
    getContractFactory(
      name: "ERC165HelperMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165HelperMock__factory>;
    getContractFactory(
      name: "HeapUtilMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HeapUtilMock__factory>;
    getContractFactory(
      name: "MerkleProofMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MerkleProofMock__factory>;
    getContractFactory(
      name: "SafeCastMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastMock__factory>;
    getContractFactory(
      name: "AddressSetMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressSetMock__factory>;
    getContractFactory(
      name: "Bytes32SetMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bytes32SetMock__factory>;
    getContractFactory(
      name: "UintSetMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UintSetMock__factory>;
    getContractFactory(
      name: "StringUtilMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StringUtilMock__factory>;
    getContractFactory(
      name: "Configurable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Configurable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "AbstractProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractProxy__factory>;
    getContractFactory(
      name: "UUPSImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSImplementation__factory>;
    getContractFactory(
      name: "UUPSProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSProxy__factory>;
    getContractFactory(
      name: "UUPSProxyWithOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSProxyWithOwner__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Helper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Helper__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Owned__factory>;
    getContractFactory(
      name: "DecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecimalMath__factory>;
    getContractFactory(
      name: "SafeCastI128",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI128__factory>;
    getContractFactory(
      name: "SafeCastI256",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI256__factory>;
    getContractFactory(
      name: "SafeCastI32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI32__factory>;
    getContractFactory(
      name: "SafeCastI56",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI56__factory>;
    getContractFactory(
      name: "SafeCastI64",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI64__factory>;
    getContractFactory(
      name: "SafeCastU128",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU128__factory>;
    getContractFactory(
      name: "SafeCastU256",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU256__factory>;
    getContractFactory(
      name: "SafeCastU32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU32__factory>;
    getContractFactory(
      name: "SafeCastU56",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU56__factory>;
    getContractFactory(
      name: "SafeCastU64",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU64__factory>;
    getContractFactory(
      name: "SetUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetUtil__factory>;

    getContractAt(
      name: "AccessError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessError>;
    getContractAt(
      name: "AddressError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressError>;
    getContractAt(
      name: "ArrayError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ArrayError>;
    getContractAt(
      name: "ChangeError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChangeError>;
    getContractAt(
      name: "InitError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitError>;
    getContractAt(
      name: "ParameterError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ParameterError>;
    getContractAt(
      name: "IConfigurable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConfigurable>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IUUPSImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUUPSImplementation>;
    getContractAt(
      name: "InitializableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitializableMock>;
    getContractAt(
      name: "ImplementationDestroyer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationDestroyer>;
    getContractAt(
      name: "ImplementationMockA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationMockA>;
    getContractAt(
      name: "ImplementationMockB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ImplementationMockB>;
    getContractAt(
      name: "UUPSImplementationMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSImplementationMock>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "ERC20PermitMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20PermitMock>;
    getContractAt(
      name: "ERC721EnumerableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721EnumerableMock>;
    getContractAt(
      name: "ERC721FailedReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721FailedReceiverMock>;
    getContractAt(
      name: "ERC721Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Mock>;
    getContractAt(
      name: "ERC721OwnedMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721OwnedMock>;
    getContractAt(
      name: "ERC721ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ReceiverMock>;
    getContractAt(
      name: "ERC721RevertingReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RevertingReceiverMock>;
    getContractAt(
      name: "VaultMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultMock>;
    getContractAt(
      name: "AddressUtilMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressUtilMock>;
    getContractAt(
      name: "ConfigurableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConfigurableMock>;
    getContractAt(
      name: "DecimalMathMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecimalMathMock>;
    getContractAt(
      name: "ERC165HelperMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165HelperMock>;
    getContractAt(
      name: "HeapUtilMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HeapUtilMock>;
    getContractAt(
      name: "MerkleProofMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MerkleProofMock>;
    getContractAt(
      name: "SafeCastMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastMock>;
    getContractAt(
      name: "AddressSetMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressSetMock>;
    getContractAt(
      name: "Bytes32SetMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bytes32SetMock>;
    getContractAt(
      name: "UintSetMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UintSetMock>;
    getContractAt(
      name: "StringUtilMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StringUtilMock>;
    getContractAt(
      name: "Configurable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Configurable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "AbstractProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractProxy>;
    getContractAt(
      name: "UUPSImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSImplementation>;
    getContractAt(
      name: "UUPSProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSProxy>;
    getContractAt(
      name: "UUPSProxyWithOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSProxyWithOwner>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Helper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Helper>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Owned>;
    getContractAt(
      name: "DecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecimalMath>;
    getContractAt(
      name: "SafeCastI128",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI128>;
    getContractAt(
      name: "SafeCastI256",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI256>;
    getContractAt(
      name: "SafeCastI32",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI32>;
    getContractAt(
      name: "SafeCastI56",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI56>;
    getContractAt(
      name: "SafeCastI64",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI64>;
    getContractAt(
      name: "SafeCastU128",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU128>;
    getContractAt(
      name: "SafeCastU256",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU256>;
    getContractAt(
      name: "SafeCastU32",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU32>;
    getContractAt(
      name: "SafeCastU56",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU56>;
    getContractAt(
      name: "SafeCastU64",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU64>;
    getContractAt(
      name: "SetUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SetUtil>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
