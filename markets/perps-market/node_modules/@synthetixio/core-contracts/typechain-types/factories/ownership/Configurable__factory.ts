/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Configurable,
  ConfigurableInterface,
} from "../../ownership/Configurable";

const _abi = [
  {
    inputs: [],
    name: "NoChange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "NotNominatedAsConfigurer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldConfigurer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newConfigurer",
        type: "address",
      },
    ],
    name: "ConfigurerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newConfigurer",
        type: "address",
      },
    ],
    name: "ConfigurerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptConfigurerRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "configurer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newNominatedConfigurer",
        type: "address",
      },
    ],
    name: "nominateNewConfigurer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedConfigurer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceConfigurerNomination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newConfigurer",
        type: "address",
      },
    ],
    name: "setConfigurer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610644806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630c0905a41461006757806335c77e6f1461008b57806368c1c70c14610093578063792a17a71461009d5780639bf140d4146100b0578063dc593c0e146100b8575b600080fd5b61006f6100cb565b6040516001600160a01b03909116815260200160405180910390f35b61006f6100e7565b61009b610100565b005b61009b6100ab3660046105be565b6101f7565b61009b6102a1565b61009b6100c63660046105be565b61030b565b60006100d56103fc565b600101546001600160a01b0316919050565b60006100f16103fc565b546001600160a01b0316919050565b600061010a6103fc565b60018101549091506001600160a01b03168061012461046d565b6001600160a01b0316146101645761013a61046d565b604051630eee1f0760e21b81526001600160a01b0390911660048201526024015b60405180910390fd5b8154604080516001600160a01b03928316815291831660208301527f6d2260b84db77e24db435273e0169e4d4c4f0e0de8caa50f6415362a7865be3a910160405180910390a181546001600160a01b03199081166001600160a01b0383161783556001830180549091169055604051600081526000805160206105ef833981519152906020015b60405180910390a15050565b6101ff6104aa565b60006102096103fc565b90506001600160a01b0382166102325760405163d92e233d60e01b815260040160405180910390fd5b60018101546001600160a01b03908116908316036102635760405163a88ee57760e01b815260040160405180910390fd5b6001810180546001600160a01b0319166001600160a01b0384169081179091556040519081526000805160206105ef833981519152906020016101eb565b60006102ab6103fc565b90506102b561046d565b60018201546001600160a01b039081169116146102d45761013a61046d565b6001810180546001600160a01b0319169055604051600081526000805160206105ef8339815191529060200160405180910390a150565b61031361052e565b600061031d6103fc565b80549091506001600160a01b039081169083160361034e5760405163a88ee57760e01b815260040160405180910390fd5b60018101546001600160a01b031615610396576001810180546001600160a01b0319169055604051600081526000805160206105ef8339815191529060200160405180910390a15b8054604080516001600160a01b03928316815291841660208301527f6d2260b84db77e24db435273e0169e4d4c4f0e0de8caa50f6415362a7865be3a910160405180910390a180546001600160a01b0319166001600160a01b0392909216919091179055565b60008060405160200161044f9060208082526026908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e436f6e6660408201526534b3bab932b960d11b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b600073e2c5658cc5c448b48141168f3e475df8f65a1e3e33148015610493575060143610155b156104a5575060131936013560601c90565b503390565b6104b2610569565b6001600160a01b03166104c361046d565b6001600160a01b0316141580156104fa57506104dd6100e7565b6001600160a01b03166104ee61046d565b6001600160a01b031614155b1561052c5761050761046d565b60405163472511eb60e11b81526001600160a01b03909116600482015260240161015b565b565b610536610569565b6001600160a01b0316336001600160a01b03161461052c5760405163472511eb60e11b815233600482015260240161015b565b60006100f160008060405160200161044f9060208082526023908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e4f776e61604082015262626c6560e81b606082015260800190565b6000602082840312156105d057600080fd5b81356001600160a01b03811681146105e757600080fd5b939250505056fec5dc7a98d5992d9cc2d0b5a57cf790636d0b2153be6cdb9a4065bd5884059cfda2646970667358221220ba81846b107e5019677e23d00f2f480e2af21aa7c3d2d60f50b3f2b4019192af64736f6c63430008160033";

type ConfigurableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigurableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Configurable__factory extends ContractFactory {
  constructor(...args: ConfigurableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Configurable> {
    return super.deploy(overrides || {}) as Promise<Configurable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Configurable {
    return super.attach(address) as Configurable;
  }
  override connect(signer: Signer): Configurable__factory {
    return super.connect(signer) as Configurable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurableInterface {
    return new utils.Interface(_abi) as ConfigurableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Configurable {
    return new Contract(address, _abi, signerOrProvider) as Configurable;
  }
}
