/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Permit,
  ERC20PermitInterface,
} from "../../token/ERC20Permit";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "existing",
        type: "uint256",
      },
    ],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "existing",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "parameter",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recoveredAddress",
        type: "address",
      },
    ],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "PermitDeadlineExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e12806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101bc578063a9059cbb146101cf578063d505accf146101e2578063dd62ed3e146101f757600080fd5b806370a082311461018e5780637ecebe00146101a157806395d89b41146101b457600080fd5b806323b872dd116100c857806323b872dd14610146578063313ce567146101595780633644e51514610173578063395093511461017b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761020a565b6040516101049190610b2c565b60405180910390f35b61012061011b366004610b97565b6102a2565b6040519015158152602001610104565b6101386102c0565b604051908152602001610104565b610120610154366004610bc1565b6102d3565b6101616102e8565b60405160ff9091168152602001610104565b6101386102fe565b610120610189366004610b97565b61032d565b61013861019c366004610bfd565b610396565b6101386101af366004610bfd565b6103c2565b6100f76103ef565b6101206101ca366004610b97565b610407565b6101206101dd366004610b97565b610461565b6101f56101f0366004610c1f565b610475565b005b610138610205366004610c92565b610654565b606061021461068e565b805461021f90610cc5565b80601f016020809104026020016040519081016040528092919081815260200182805461024b90610cc5565b80156102985780601f1061026d57610100808354040283529160200191610298565b820191906000526020600020905b81548152906001019060200180831161027b57829003601f168201915b5050505050905090565b60006102b66102af6106fa565b8484610737565b5060015b92915050565b60006102ca61068e565b60050154905090565b60006102e08484846107b1565b949350505050565b60006102f261068e565b6002015460ff16919050565b60008061030961088d565b805490915046146103215761031c6108e1565b610327565b80600101545b91505090565b60008061033861068e565b60040160006103456106fa565b6001600160a01b0390811682526020808301939093526040918201600090812091881681529252902054905061038c61037c6106fa565b856103878685610d15565b610737565b5060019392505050565b60006103a061068e565b6001600160a01b03909216600090815260039290920160205250604090205490565b6000806103cd61088d565b6001600160a01b03909316600090815260029093016020525050604090205490565b60606103f961068e565b600101805461021f90610cc5565b60008061041261068e565b600401600061041f6106fa565b6001600160a01b0390811682526020808301939093526040918201600090812091881681529252902054905061038c6104566106fa565b856103878685610d28565b60006102b661046e6106fa565b8484610989565b42841015610496576040516305787bdf60e01b815260040160405180910390fd5b60006104a061088d565b6001600160a01b038916600090815260028201602052604081205491925060016104c86102fe565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808f1692820192909252908c166060820152608081018b905260a0810185905260c081018a905260e0016040516020818303038152906040528051906020012060405160200161056192919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff891690820152606081018790526080810186905260a0016020604051602081039080840390855afa1580156105bf573d6000803e3d6000fd5b505060408051601f1901516001600160a01b03808e1660009081526002880160205292909220600186019055925082161590508061060f5750896001600160a01b0316816001600160a01b031614155b1561063d5760405163bf18af4360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610648818a8a610737565b50505050505050505050565b600061065e61068e565b6001600160a01b039384166000908152600491909101602090815260408083209490951682529290925250205490565b6000806040516020016106dc9060208082526021908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e455243326040820152600360fc1b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b600073e2c5658cc5c448b48141168f3e475df8f65a1e3e33148015610720575060143610155b15610732575060131936013560601c90565b503390565b61074082610a59565b8061074961068e565b6001600160a01b038581166000818152600493909301602090815260408085209388168086529382529384902094909455915184815290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000806107bc61068e565b6001600160a01b0386166000908152600482016020526040812091925090816107e36106fa565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050838110156108315760405163054365bb60e31b81526004810185905260248101829052604401610634565b6001600160a01b0386166000908152600483016020526040812085916108556106fa565b6001600160a01b0316815260208101919091526040016000208054919091039055610881868686610989565b50600195945050505050565b6000806040516020016106dc9060208082526027908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e455243326040820152660c14195c9b5a5d60ca1b606082015260800190565b6000806108ec61068e565b90507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f816000016040516109209190610d3b565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c0016040516020818303038152906040528051906020012091505090565b6109938282610ac1565b600061099d61068e565b6001600160a01b0385166000908152600382016020526040902054909150828110156109e65760405163cf47918160e01b81526004810184905260248101829052604401610634565b6001600160a01b038086166000818152600385016020526040808220805488900390559287168082529083902080548701905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a4a9087815260200190565b60405180910390a35050505050565b6001600160a01b038116610abe5760408051634bab873760e11b8152600481019190915260066044820152651d185c99d95d60d21b606482015260806024820152600c60848201526b5a65726f206164647265737360a01b60a482015260c401610634565b50565b610aca82610a59565b80600003610b285760408051634bab873760e11b815260048101919091526006604482015265185b5bdd5b9d60d21b606482015260806024820152600b60848201526a16995c9bc8185b5bdd5b9d60aa1b60a482015260c401610634565b5050565b60006020808352835180602085015260005b81811015610b5a57858101830151858201604001528201610b3e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b9257600080fd5b919050565b60008060408385031215610baa57600080fd5b610bb383610b7b565b946020939093013593505050565b600080600060608486031215610bd657600080fd5b610bdf84610b7b565b9250610bed60208501610b7b565b9150604084013590509250925092565b600060208284031215610c0f57600080fd5b610c1882610b7b565b9392505050565b600080600080600080600060e0888a031215610c3a57600080fd5b610c4388610b7b565b9650610c5160208901610b7b565b95506040880135945060608801359350608088013560ff81168114610c7557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ca557600080fd5b610cae83610b7b565b9150610cbc60208401610b7b565b90509250929050565b600181811c90821680610cd957607f821691505b602082108103610cf957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102ba576102ba610cff565b818103818111156102ba576102ba610cff565b60008083548160018260011c91506001831680610d5957607f831692505b60208084108203610d7857634e487b7160e01b86526022600452602486fd5b818015610d8c5760018114610da157610dce565b60ff1986168952841515850289019650610dce565b60008a81526020902060005b86811015610dc65781548b820152908501908301610dad565b505084890196505b50949897505050505050505056fea2646970667358221220ae761e1b00de0945ab567f689e2387d73bea92a8f30d88d15ff3691bdc68ee6a64736f6c63430008160033";

type ERC20PermitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PermitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Permit__factory extends ContractFactory {
  constructor(...args: ERC20PermitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC20Permit> {
    return super.deploy(overrides || {}) as Promise<ERC20Permit>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Permit {
    return super.attach(address) as ERC20Permit;
  }
  override connect(signer: Signer): ERC20Permit__factory {
    return super.connect(signer) as ERC20Permit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PermitInterface {
    return new utils.Interface(_abi) as ERC20PermitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Permit {
    return new Contract(address, _abi, signerOrProvider) as ERC20Permit;
  }
}
