/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721RevertingReceiverMock,
  ERC721RevertingReceiverMockInterface,
} from "../../../mocks/token/ERC721RevertingReceiverMock";

const _abi = [
  {
    inputs: [],
    name: "SomeFancyError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101bf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e3660046100ad565b610060565b6040516001600160e01b0319909116815260200160405180910390f35b6000604051633ef62f2760e21b815260040160405180910390fd5b80356001600160a01b038116811461009257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100c357600080fd5b6100cc8561007b565b93506100da6020860161007b565b925060408501359150606085013567ffffffffffffffff808211156100fe57600080fd5b818701915087601f83011261011257600080fd5b81358181111561012457610124610097565b604051601f8201601f19908116603f0116810190838211818310171561014c5761014c610097565b816040528281528a602084870101111561016557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea26469706673582212201bc7239493f5648fe8fa9ee496466aa2038c564cabfaf7fd2e36c50488c07c2564736f6c63430008160033";

type ERC721RevertingReceiverMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721RevertingReceiverMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721RevertingReceiverMock__factory extends ContractFactory {
  constructor(...args: ERC721RevertingReceiverMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC721RevertingReceiverMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721RevertingReceiverMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721RevertingReceiverMock {
    return super.attach(address) as ERC721RevertingReceiverMock;
  }
  override connect(signer: Signer): ERC721RevertingReceiverMock__factory {
    return super.connect(signer) as ERC721RevertingReceiverMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721RevertingReceiverMockInterface {
    return new utils.Interface(_abi) as ERC721RevertingReceiverMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721RevertingReceiverMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721RevertingReceiverMock;
  }
}
