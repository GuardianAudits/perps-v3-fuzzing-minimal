/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ImplementationMockB,
  ImplementationMockBInterface,
} from "../../../mocks/proxy/ImplementationMockB";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ImplementationIsSterile",
    type: "error",
  },
  {
    inputs: [],
    name: "NoChange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contr",
        type: "address",
      },
    ],
    name: "NotAContract",
    type: "error",
  },
  {
    inputs: [],
    name: "UpgradeSimulationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "self",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getB",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newA",
        type: "uint256",
      },
    ],
    name: "setA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newB",
        type: "string",
      },
    ],
    name: "setB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "simulateUpgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610899806100206000396000f3fe60806040526004361061006e5760003560e01c8063b5e7bc601161004b578063b5e7bc60146100ef578063c7f62cda14610102578063d46300fd14610122578063ee919d501461014057005b80633659cfe614610077578063a1c5191514610097578063aaf10f42146100c257005b3661007557005b005b34801561008357600080fd5b506100756100923660046105d4565b610160565b3480156100a357600080fd5b506100ac61016c565b6040516100b99190610628565b60405180910390f35b3480156100ce57600080fd5b506100d76101fe565b6040516001600160a01b0390911681526020016100b9565b6100756100fd36600461065b565b610217565b34801561010e57600080fd5b5061007561011d3660046105d4565b610229565b34801561012e57600080fd5b506000546040519081526020016100b9565b34801561014c57600080fd5b5061007561015b3660046106cd565b600055565b6101698161033e565b50565b60606001805461017b906106e6565b80601f01602080910402602001604051908101604052809291908181526020018280546101a7906106e6565b80156101f45780601f106101c9576101008083540402835291602001916101f4565b820191906000526020600020905b8154815290600101906020018083116101d757829003601f168201915b5050505050905090565b6000610208610469565b546001600160a01b0316919050565b6001610224828483610786565b505050565b6000610233610469565b80546001600160a01b038481166001600160a81b031983168117600160a01b1784556040805192909316602480840182905284518085039091018152604490930184526020830180516001600160e01b0316631b2ce7f360e11b17905292519394509192600092916102a491610847565b600060405180830381855af49150503d80600081146102df576040519150601f19603f3d011682016040523d82523d6000602084013e6102e4565b606091505b5050905080158061030f5750816001600160a01b0316610302610469565b546001600160a01b031614155b1561032d57604051631439f4b560e31b815260040160405180910390fd5b825460ff60a01b1916835560008080fd5b6001600160a01b0381166103655760405163d92e233d60e01b815260040160405180910390fd5b803b610394576040516322a2d07b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b600061039e610469565b80549091506001600160a01b03908116908316036103cf5760405163a88ee57760e01b815260040160405180910390fd5b8054600160a01b900460ff161580156103ec57506103ec826104d5565b1561041557604051631550430160e01b81526001600160a01b038316600482015260240161038b565b80546001600160a01b0319166001600160a01b038316908117825560405190815230907f5d611f318680d00598bb735d61bacf0c514c6b50e1e5ad30040a4df2b12791c79060200160405180910390a25050565b6000806040516020016104b79060208082526021908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e50726f786040820152607960f81b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b604080516001600160a01b03831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166363fb166d60e11b179052905160009182918291309161052c9190610847565b600060405180830381855af49150503d8060008114610567576040519150601f19603f3d011682016040523d82523d6000602084013e61056c565b606091505b5091509150811580156105cc5750604051631439f4b560e31b602082015260240160405160208183030381529060405280519060200120816040516020016105b49190610847565b60405160208183030381529060405280519060200120145b949350505050565b6000602082840312156105e657600080fd5b81356001600160a01b03811681146105fd57600080fd5b9392505050565b60005b8381101561061f578181015183820152602001610607565b50506000910152565b6020815260008251806020840152610647816040850160208701610604565b601f01601f19169190910160400192915050565b6000806020838503121561066e57600080fd5b823567ffffffffffffffff8082111561068657600080fd5b818501915085601f83011261069a57600080fd5b8135818111156106a957600080fd5b8660208285010111156106bb57600080fd5b60209290920196919550909350505050565b6000602082840312156106df57600080fd5b5035919050565b600181811c908216806106fa57607f821691505b60208210810361071a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610224576000816000526020600020601f850160051c8101602086101561075f5750805b601f850160051c820191505b8181101561077e5782815560010161076b565b505050505050565b67ffffffffffffffff83111561079e5761079e610720565b6107b2836107ac83546106e6565b83610736565b6000601f8411600181146107e657600085156107ce5750838201355b600019600387901b1c1916600186901b178355610840565b600083815260209020601f19861690835b8281101561081757868501358255602094850194600190920191016107f7565b50868210156108345760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008251610859818460208701610604565b919091019291505056fea264697066735822122029d899bc01bc7d418b43e783fc52345d24a62b152943f4736bb9533bfcead3af64736f6c63430008160033";

type ImplementationMockBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ImplementationMockBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ImplementationMockB__factory extends ContractFactory {
  constructor(...args: ImplementationMockBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ImplementationMockB> {
    return super.deploy(overrides || {}) as Promise<ImplementationMockB>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ImplementationMockB {
    return super.attach(address) as ImplementationMockB;
  }
  override connect(signer: Signer): ImplementationMockB__factory {
    return super.connect(signer) as ImplementationMockB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ImplementationMockBInterface {
    return new utils.Interface(_abi) as ImplementationMockBInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ImplementationMockB {
    return new Contract(address, _abi, signerOrProvider) as ImplementationMockB;
  }
}
