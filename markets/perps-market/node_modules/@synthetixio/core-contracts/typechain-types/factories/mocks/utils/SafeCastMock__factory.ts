/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeCastMock,
  SafeCastMockInterface,
} from "../../../mocks/utils/SafeCastMock";

const _abi = [
  {
    inputs: [],
    name: "OverflowInt128ToInt32",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt128ToUint128",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToInt128",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToInt24",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToUint256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt32ToUint32",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt56ToInt24",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt64ToUint64",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint128ToInt128",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToInt256",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint128",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint160",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint32",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint256ToUint64",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint32ToInt32",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint56ToInt56",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowUint64ToInt64",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "x",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
    ],
    name: "bytes32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "x",
        type: "bytes32",
      },
    ],
    name: "bytes32toUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "x",
        type: "int128",
      },
    ],
    name: "int128toInt256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "x",
        type: "int128",
      },
    ],
    name: "int128toInt32",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "x",
        type: "int128",
      },
    ],
    name: "int128toUint128",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "x",
        type: "int24",
      },
    ],
    name: "int24toInt256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "int256toInt128",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "int256toInt24",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "int256toUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int32",
        name: "x",
        type: "int32",
      },
    ],
    name: "int32toUint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int56",
        name: "x",
        type: "int56",
      },
    ],
    name: "int56toInt24",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
    ],
    name: "int64toUint64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "uint128toBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "uint128toInt128",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "uint128toUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "x",
        type: "uint160",
      },
    ],
    name: "uint160toUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "uint256toBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "uint256toInt256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "uint256toUint128",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "uint256toUint160",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "uint256toUint32",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "uint256toUint64",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "x",
        type: "uint32",
      },
    ],
    name: "uint32toInt32",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "x",
        type: "uint32",
      },
    ],
    name: "uint32toUint256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "x",
        type: "uint32",
      },
    ],
    name: "uint32toUint56",
    outputs: [
      {
        internalType: "uint56",
        name: "",
        type: "uint56",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint56",
        name: "x",
        type: "uint56",
      },
    ],
    name: "uint56toInt56",
    outputs: [
      {
        internalType: "int56",
        name: "",
        type: "int56",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "x",
        type: "uint64",
      },
    ],
    name: "uint64toInt64",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zeroI128",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zeroI256",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ab3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636ae3909b11610104578063b5bcc174116100a2578063e0f8b72e11610071578063e0f8b72e146101df578063e4cb785714610485578063f37d15831461048c578063f65978071461049f57600080fd5b8063b5bcc17414610439578063bc22a7961461044c578063d16990b714610472578063d23dd793146103cc57600080fd5b806390da2224116100de57806390da2224146103ed5780639cdfdc6d14610400578063ae3bf2ba14610413578063b1d7933d1461042657600080fd5b80636ae3909b146103b957806382c947b7146103cc578063844a124f146103df57600080fd5b80632e432ef81161017c57806338bd5cf71161014b57806338bd5cf71461033257806349528dec146103585780634b1399e81461037e5780635e61bce0146103a657600080fd5b80632e432ef8146102c957806332fed92c146102f457806335573fe41461031f578063365fadfa1461031f57600080fd5b80630c4125ee116101b85780630c4125ee1461023e5780630e1283c51461025157806313f690a71461027757806315eeb57f1461029d57600080fd5b806303e66415146101df578063098a684e14610205578063099af71314610218575b600080fd5b6101f26101ed3660046108d7565b6104a6565b6040519081526020015b60405180910390f35b6101f2610213366004610907565b6104b9565b61022b61022636600461092d565b6104c7565b60405160079190910b81526020016101fc565b6101f261024c366004610957565b6104d2565b61026461025f36600461097a565b6104de565b604051600f9190910b81526020016101fc565b61028a610285366004610993565b6104e9565b60405160039190910b81526020016101fc565b6102b06102ab36600461097a565b6104f4565b60405167ffffffffffffffff90911681526020016101fc565b6102dc6102d736600461097a565b6104ff565b6040516001600160a01b0390911681526020016101fc565b61030761030236600461097a565b61050a565b6040516001600160801b0390911681526020016101fc565b6101f261032d36600461097a565b610515565b61034561034036600461097a565b61051d565b60405160029190910b81526020016101fc565b61036b6103663660046109b6565b610528565b60405160069190910b81526020016101fc565b61039161038c36600461097a565b610533565b60405163ffffffff90911681526020016101fc565b6103456103b43660046109df565b61053e565b6101f26103c7366004610993565b610549565b6101f26103da366004610a1a565b610555565b6102dc61032d36600461097a565b6103076103fb366004610993565b610566565b61039161040e366004610a37565b610571565b61028a610421366004610907565b61057c565b6102b0610434366004610a5a565b610587565b6102646104473660046108d7565b610592565b61045a610213366004610907565b60405166ffffffffffffff90911681526020016101fc565b6101f261048036600461097a565b61059d565b60006101f2565b6101f261049a36600461097a565b6105a8565b6000610264565b60006001600160801b0382165b92915050565b600063ffffffff82166104b3565b60006104b3826105b3565b60006104b38260020b90565b60006104b3826105ec565b60006104b382610631565b60006104b38261066f565b60006104b38261069a565b60006104b3826106c4565b6000816104b3565b60006104b3826106ee565b60006104b382610722565b60006104b382610755565b60006104b38261077c565b60006104b382600f0b90565b60006001600160a01b0382166104b3565b60006104b3826107b8565b60006104b3826107de565b60006104b382610804565b60006104b382610831565b60006104b382610857565b60006104b38261088a565b60006104b3826108b4565b6000677fffffffffffffff67ffffffffffffffff831611156105e857604051633340f63360e11b815260040160405180910390fd5b5090565b60006f7fffffffffffffffffffffffffffffff19821280610613575060016001607f1b0382135b156105e857604051634022cc0360e01b815260040160405180910390fd5b6000637fffffff19600f83900b12806106515750637fffffff600f83900b135b156105e857604051635102a08360e01b815260040160405180910390fd5b600067ffffffffffffffff8211156105e8576040516372b1c34f60e01b815260040160405180910390fd5b60006001600160a01b038211156105e85760405163dccde8ed60e01b815260040160405180910390fd5b60006001600160801b038211156105e857604051637d5864af60e11b815260040160405180910390fd5b6000627fffff198212806107045750627fffff82135b156105e857604051632a741cbd60e11b815260040160405180910390fd5b6000667fffffffffffff66ffffffffffffff831611156105e8576040516329d2678160e21b815260040160405180910390fd5b600063ffffffff8211156105e8576040516334bee0b960e01b815260040160405180910390fd5b6000627fffff19600683900b128061079a5750627fffff600683900b135b156105e857604051630d962f7960e21b815260040160405180910390fd5b60008082600f0b12156105e85760405163144ec41160e21b815260040160405180910390fd5b6000808260030b12156105e85760405163fda0d7f160e01b815260040160405180910390fd5b6000637fffffff63ffffffff831611156105e857604051630299decb60e01b815260040160405180910390fd5b6000808260070b12156105e857604051634c09b23960e11b815260040160405180910390fd5b600060016001607f1b036001600160801b03831611156105e857604051634593782f60e11b815260040160405180910390fd5b60006001600160ff1b038211156105e85760405163677c430560e11b815260040160405180910390fd5b6000808212156105e85760405163029f024d60e31b815260040160405180910390fd5b6000602082840312156108e957600080fd5b81356001600160801b038116811461090057600080fd5b9392505050565b60006020828403121561091957600080fd5b813563ffffffff8116811461090057600080fd5b60006020828403121561093f57600080fd5b813567ffffffffffffffff8116811461090057600080fd5b60006020828403121561096957600080fd5b81358060020b811461090057600080fd5b60006020828403121561098c57600080fd5b5035919050565b6000602082840312156109a557600080fd5b813580600f0b811461090057600080fd5b6000602082840312156109c857600080fd5b813566ffffffffffffff8116811461090057600080fd5b6000602082840312156109f157600080fd5b81358060060b811461090057600080fd5b6001600160a01b0381168114610a1757600080fd5b50565b600060208284031215610a2c57600080fd5b813561090081610a02565b600060208284031215610a4957600080fd5b81358060030b811461090057600080fd5b600060208284031215610a6c57600080fd5b81358060070b811461090057600080fdfea264697066735822122042f559c98d85268ddd2f5f6825faba01d46f68c6d36c9e8ef8b50ac90f29be0564736f6c63430008160033";

type SafeCastMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeCastMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeCastMock__factory extends ContractFactory {
  constructor(...args: SafeCastMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SafeCastMock> {
    return super.deploy(overrides || {}) as Promise<SafeCastMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeCastMock {
    return super.attach(address) as SafeCastMock;
  }
  override connect(signer: Signer): SafeCastMock__factory {
    return super.connect(signer) as SafeCastMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeCastMockInterface {
    return new utils.Interface(_abi) as SafeCastMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeCastMock {
    return new Contract(address, _abi, signerOrProvider) as SafeCastMock;
  }
}
