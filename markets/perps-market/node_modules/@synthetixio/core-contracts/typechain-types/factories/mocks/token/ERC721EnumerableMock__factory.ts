/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721EnumerableMock,
  ERC721EnumerableMockInterface,
} from "../../../mocks/token/ERC721EnumerableMock";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "CannotSelfApprove",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "IndexOverrun",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "parameter",
        type: "string",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "InvalidTransferRecipient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "TokenAlreadyMinted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURL",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b7d806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80634f6ccce7116100ad578063a6487c5311610071578063a6487c5314610277578063b88d4fde1461028a578063beabacc81461029d578063c87b56dd146102b0578063e985e9c5146102c357600080fd5b80634f6ccce7146102235780636352211e1461023657806370a082311461024957806395d89b411461025c578063a22cb4651461026457600080fd5b806323b872dd116100f457806323b872dd146101c45780632f745c59146101d757806342842e0e146101ea57806342966c68146101fd578063449a52f81461021057600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f366004611560565b6102d6565b60405190151581526020015b60405180910390f35b610161610302565b60405161015091906115cd565b61018161017c3660046115e0565b61039a565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611615565b6103ef565b005b6101b66104ba565b604051908152602001610150565b6101ac6101d236600461163f565b6104cd565b6101b66101e5366004611615565b6104fa565b6101ac6101f836600461163f565b61056c565b6101ac61020b3660046115e0565b610587565b6101ac61021e366004611615565b610593565b6101b66102313660046115e0565b6105a1565b6101816102443660046115e0565b6105e8565b6101b661025736600461167b565b610638565b610161610696565b6101ac610272366004611696565b6106ae565b6101ac61028536600461177e565b610794565b6101ac610298366004611806565b61079f565b6101ac6102ab36600461163f565b6104ea565b6101616102be3660046115e0565b6107fb565b6101446102d1366004611882565b61090e565b60006102e18261094b565b806102fc57506001600160e01b0319821663780e9d6360e01b145b92915050565b606061030c61099c565b8054610317906118b5565b80601f0160208091040260200160405190810160405280929190818152602001828054610343906118b5565b80156103905780601f1061036557610100808354040283529160200191610390565b820191906000526020600020905b81548152906001019060200180831161037357829003601f168201915b5050505050905090565b60006103a582610a09565b6103ca5760405163c927e5bf60e01b8152600481018390526024015b60405180910390fd5b6103d261099c565b60009283526005016020525060409020546001600160a01b031690565b60006103f961099c565b60008381526003820160205260409020549091506001600160a01b039081169084168190036104465760405163132d05df60e31b81526001600160a01b03851660048201526024016103c1565b806001600160a01b0316610458610a37565b6001600160a01b0316141580156104785750610476816102d1610a37565b155b156104aa57610485610a37565b60405163472511eb60e11b81526001600160a01b0390911660048201526024016103c1565b6104b48484610a74565b50505050565b60006104c4610aef565b60030154919050565b6104de6104d8610a37565b82610b48565b6104ea57610485610a37565b6104f5838383610ba7565b505050565b60008161050684610638565b11610537578161051584610638565b604051636296e7b360e01b8152600481019290925260248201526044016103c1565b61053f610aef565b6001600160a01b039390931660009081526002909301602090815260408085209385529290525090205490565b6104f58383836040518060200160405280600081525061079f565b61059081610d05565b50565b61059d8282610dcd565b5050565b60006105ab6104ba565b82106105ba57816105156104ba565b6105c2610aef565b60030182815481106105d6576105d66118ef565b90600052602060002001549050919050565b60006105f382610a09565b6106135760405163c927e5bf60e01b8152600481018390526024016103c1565b61061b61099c565b60009283526003016020525060409020546001600160a01b031690565b60006001600160a01b03821661066c5760405163b20f76e360e01b81526001600160a01b03831660048201526024016103c1565b61067461099c565b6001600160a01b03909216600090815260049290920160205250604090205490565b60606106a061099c565b6001018054610317906118b5565b816001600160a01b03166106c0610a37565b6001600160a01b0316036106f25760405163132d05df60e31b81526001600160a01b03831660048201526024016103c1565b806106fb61099c565b6006016000610708610a37565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561074c610a37565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610788911515815260200190565b60405180910390a35050565b6104f5838383610f2e565b6107b06107aa610a37565b83610b48565b6107bc57610485610a37565b6107c7848484610ba7565b6107d384848484610f65565b6104b4576040516307d7841560e21b81526001600160a01b03841660048201526024016103c1565b606061080682610a09565b6108265760405163c927e5bf60e01b8152600481018390526024016103c1565b600061083061099c565b600201805461083e906118b5565b80601f016020809104026020016040519081016040528092919081815260200182805461086a906118b5565b80156108b75780601f1061088c576101008083540402835291602001916108b7565b820191906000526020600020905b81548152906001019060200180831161089a57829003601f168201915b5050505050905060008151116108dc5760405180602001604052806000815250610907565b806108e684611013565b6040516020016108f7929190611905565b6040516020818303038152906040525b9392505050565b600061091861099c565b6001600160a01b039384166000908152600691909101602090815260408083209490951682529290925250205460ff1690565b60006001600160e01b031982166301ffc9a760e01b148061097c57506001600160e01b031982166380ac58cd60e01b145b806102fc57506001600160e01b03198216635b5e139f60e01b1492915050565b6000806040516020016109eb9060208082526022908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e45524337604082015261323160f01b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b600080610a1461099c565b60009384526003016020526040909220546001600160a01b031690911415919050565b600073e2c5658cc5c448b48141168f3e475df8f65a1e3e33148015610a5d575060143610155b15610a6f575060131936013560601c90565b503390565b81610a7d61099c565b60008381526005919091016020526040902080546001600160a01b0319166001600160a01b0392831617905581908316610ab6826105e8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806040516020016109eb906020808252602c908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e4552433760408201526b3231456e756d657261626c6560a01b606082015260800190565b600080610b54836105e8565b9050806001600160a01b0316846001600160a01b03161480610b8f5750836001600160a01b0316610b848461039a565b6001600160a01b0316145b80610b9f5750610b9f818561090e565b949350505050565b6000610bb161099c565b9050836001600160a01b0316610bc6836105e8565b6001600160a01b031614610bf85760405163472511eb60e11b81526001600160a01b03851660048201526024016103c1565b6001600160a01b038316610c1f5760405163d92e233d60e01b815260040160405180910390fd5b610c2a848484611114565b610c35600083610a74565b6001600160a01b03841660009081526004820160205260408120805460019290610c6090849061194a565b90915550506001600160a01b03831660009081526004820160205260408120805460019290610c9090849061195d565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b03851617905581836001600160a01b0316856001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000610d0f61099c565b60008381526003820160205260408120549192506001600160a01b0390911690610d399084610a74565b610d4581600085611114565b6001600160a01b03811660009081526004830160205260408120805460019290610d7090849061194a565b9091555050600083815260038301602052604080822080546001600160a01b0319169055518491906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b6000610dd761099c565b90506001600160a01b038316610e005760405163d92e233d60e01b815260040160405180910390fd5b81600003610e625760408051634bab873760e11b8152600481019190915260076044820152661d1bdad95b925960ca1b606482015260806024820152600e60848201526d63616e6e6f74206265207a65726f60901b60a482015260c4016103c1565b610e6b82610a09565b15610e8c576040516322d1d39560e21b8152600481018390526024016103c1565b610e9860008484611114565b6001600160a01b03831660009081526004820160205260408120805460019290610ec390849061195d565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b03851617905560405182906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505050565b610f3983838361118d565b6000610f43610aef565b6003015411156104f55760405162dc149f60e41b815260040160405180910390fd5b6000833b1561100857836001600160a01b031663150b7a02610f85610a37565b8786866040518563ffffffff1660e01b8152600401610fa79493929190611970565b6020604051808303816000875af1925050508015610fe2575060408051601f3d908101601f19168201909252610fdf918101906119ad565b60015b610fee57506000610b9f565b6001600160e01b031916630a85bd0160e11b149050610b9f565b506001949350505050565b60608160000361103a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611064578061104e816119ca565b915061105d9050600a836119f9565b915061103e565b60008167ffffffffffffffff81111561107f5761107f6116d2565b6040519080825280601f01601f1916602001820160405280156110a9576020820181803683370190505b5090505b8415610b9f576110be60018361194a565b91506110cb600a86611a0d565b6110d690603061195d565b60f81b8183815181106110eb576110eb6118ef565b60200101906001600160f81b031916908160001a90535061110d600a866119f9565b94506110ad565b6001600160a01b0383166111305761112b816112a3565b611153565b816001600160a01b0316836001600160a01b0316146111535761115383826112eb565b6001600160a01b03821661116a576104f5816113f4565b826001600160a01b0316826001600160a01b0316146104f5576104f582826114ee565b600061119761099c565b905060008160000180546111aa906118b5565b905011806111c8575060008160010180546111c4906118b5565b9050115b806111e3575060008160020180546111df906118b5565b9050115b156112005760405162dc149f60e41b815260040160405180910390fd5b8351158061120d57508251155b156112735760408051634bab873760e11b81526004810191909152600b60448201526a1b985b594bdcde5b589bdb60aa1b60648201526080602482015260116084820152706d757374206e6f7420626520656d70747960781b60a482015260c4016103c1565b8061127e8582611a71565b506001810161128d8482611a71565b506002810161129c8382611a71565b5050505050565b6112ab610aef565b600301546112b7610aef565b600083815260019190910160205260409020556112d2610aef565b6003018054600181018255600091825260209091200155565b600060016112f884610638565b611302919061194a565b9050600061130e610aef565b6000848152602091909152604090205490508181146113a4576000611331610aef565b6001600160a01b038616600090815260029190910160209081526040808320868452909152902054905080611364610aef565b6001600160a01b03871660009081526002919091016020908152604080832086845290915290205581611395610aef565b60009283526020526040909120555b6113ac610aef565b600084815260209190915260408120556113c4610aef565b6001600160a01b039094166000908152600294909401602090815260408086209386529290525082209190915550565b60006001611400610aef565b6003015461140e919061194a565b9050600061141a610aef565b600084815260019190910160205260408120549150611437610aef565b600301838154811061144b5761144b6118ef565b9060005260206000200154905080611461610aef565b6003018381548110611475576114756118ef565b6000918252602090912001558161148a610aef565b600083815260019190910160205260409020556114a5610aef565b600085815260019190910160205260408120556114c0610aef565b6003018054806114d2576114d2611b31565b6001900381819060005260206000200160009055905550505050565b60006114f983610638565b905081611504610aef565b6001600160a01b03851660009081526002919091016020908152604080832085845290915290205580611535610aef565b60009384526020526040909220919091555050565b6001600160e01b03198116811461059057600080fd5b60006020828403121561157257600080fd5b81356109078161154a565b60005b83811015611598578181015183820152602001611580565b50506000910152565b600081518084526115b981602086016020860161157d565b601f01601f19169290920160200192915050565b60208152600061090760208301846115a1565b6000602082840312156115f257600080fd5b5035919050565b80356001600160a01b038116811461161057600080fd5b919050565b6000806040838503121561162857600080fd5b611631836115f9565b946020939093013593505050565b60008060006060848603121561165457600080fd5b61165d846115f9565b925061166b602085016115f9565b9150604084013590509250925092565b60006020828403121561168d57600080fd5b610907826115f9565b600080604083850312156116a957600080fd5b6116b2836115f9565b9150602083013580151581146116c757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611703576117036116d2565b604051601f8501601f19908116603f0116810190828211818310171561172b5761172b6116d2565b8160405280935085815286868601111561174457600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261176f57600080fd5b610907838335602085016116e8565b60008060006060848603121561179357600080fd5b833567ffffffffffffffff808211156117ab57600080fd5b6117b78783880161175e565b945060208601359150808211156117cd57600080fd5b6117d98783880161175e565b935060408601359150808211156117ef57600080fd5b506117fc8682870161175e565b9150509250925092565b6000806000806080858703121561181c57600080fd5b611825856115f9565b9350611833602086016115f9565b925060408501359150606085013567ffffffffffffffff81111561185657600080fd5b8501601f8101871361186757600080fd5b611876878235602084016116e8565b91505092959194509250565b6000806040838503121561189557600080fd5b61189e836115f9565b91506118ac602084016115f9565b90509250929050565b600181811c908216806118c957607f821691505b6020821081036118e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000835161191781846020880161157d565b83519083019061192b81836020880161157d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102fc576102fc611934565b808201808211156102fc576102fc611934565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906119a3908301846115a1565b9695505050505050565b6000602082840312156119bf57600080fd5b81516109078161154a565b6000600182016119dc576119dc611934565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611a0857611a086119e3565b500490565b600082611a1c57611a1c6119e3565b500690565b601f8211156104f5576000816000526020600020601f850160051c81016020861015611a4a5750805b601f850160051c820191505b81811015611a6957828155600101611a56565b505050505050565b815167ffffffffffffffff811115611a8b57611a8b6116d2565b611a9f81611a9984546118b5565b84611a21565b602080601f831160018114611ad45760008415611abc5750858301515b600019600386901b1c1916600185901b178555611a69565b600085815260208120601f198616915b82811015611b0357888601518255948401946001909101908401611ae4565b5085821015611b215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fdfea26469706673582212202bd287d66a01cb80c9675149d2e03881ee38990b433dd1900dd722b9ce246f5c64736f6c63430008160033";

type ERC721EnumerableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721EnumerableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721EnumerableMock__factory extends ContractFactory {
  constructor(...args: ERC721EnumerableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC721EnumerableMock> {
    return super.deploy(overrides || {}) as Promise<ERC721EnumerableMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721EnumerableMock {
    return super.attach(address) as ERC721EnumerableMock;
  }
  override connect(signer: Signer): ERC721EnumerableMock__factory {
    return super.connect(signer) as ERC721EnumerableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721EnumerableMockInterface {
    return new utils.Interface(_abi) as ERC721EnumerableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721EnumerableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721EnumerableMock;
  }
}
