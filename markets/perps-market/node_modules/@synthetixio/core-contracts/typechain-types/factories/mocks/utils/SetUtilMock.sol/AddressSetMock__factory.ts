/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AddressSetMock,
  AddressSetMockInterface,
} from "../../../../mocks/utils/SetUtilMock.sol/AddressSetMock";

const _abi = [
  {
    inputs: [],
    name: "PositionOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueAlreadyInSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueNotInSet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "positionOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
      {
        internalType: "address",
        name: "newValue",
        type: "address",
      },
    ],
    name: "replace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "valueAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "values",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063631de4d61161005b578063631de4d6146100f3578063971217b714610106578063fd2d39c51461011b578063fe092b0e1461012e57600080fd5b80630a3b0a4f1461008d5780631f7b6d32146100a257806329092d0e146100bd5780635dbe47e8146100d0575b600080fd5b6100a061009b3660046105ac565b610159565b005b6100aa610167565b6040519081526020015b60405180910390f35b6100a06100cb3660046105ac565b610178565b6100e36100de3660046105ac565b610183565b60405190151581526020016100b4565b6100a06101013660046105c7565b610195565b61010e6101a5565b6040516100b491906105fa565b6100aa6101293660046105ac565b6101b1565b61014161013c366004610647565b6101bd565b6040516001600160a01b0390911681526020016100b4565b6101646000826101c9565b50565b600061017360006101dc565b905090565b6101646000826101e6565b600061018f81836101f9565b92915050565b6101a16000838361021e565b5050565b60606101736000610240565b600061018f818361024d565b600061018f8183610262565b6101a1826001600160a01b038316610274565b600061018f825490565b6101a1826001600160a01b0383166102cd565b6001600160a01b038116600090815260018301602052604081205415155b9392505050565b61023b836001600160a01b0384166001600160a01b0384166103cc565b505050565b606060006102178361048a565b6000610217836001600160a01b0384166104e6565b6000610217610271848461052b565b90565b6000818152600183016020526040902054156102a35760405163682ad32d60e01b815260040160405180910390fd5b81546001818101845560008481526020808220909301849055845493815293019052604090912055565b6000818152600183016020526040812054908190036102ff5760405163b3dbc29360e01b815260040160405180910390fd5b600061030c600183610660565b845490915060009061032090600190610660565b905080821461038557600085600001828154811061034057610340610681565b906000526020600020015490508086600001848154811061036357610363610681565b6000918252602080832090910192909255918252600187019052604090208390555b845485908061039657610396610697565b60019003818190600052602060002001600090559055846001016000858152602001908152602001600020600090555050505050565b60008281526001840160205260409020546103fa5760405163b3dbc29360e01b815260040160405180910390fd5b6000818152600184016020526040902054156104295760405163682ad32d60e01b815260040160405180910390fd5b6000828152600180850160205260408220805490839055919061044c9083610660565b90508285600001828154811061046457610464610681565b600091825260208083209091019290925593845260019095019094526040909120555050565b6060816000018054806020026020016040519081016040528092919081815260200182805480156104da57602002820191906000526020600020905b8154815260200190600101908083116104c6575b50505050509050919050565b60008181526001830160205260408120546105145760405163b3dbc29360e01b815260040160405180910390fd5b506000908152600191909101602052604090205490565b600081158061053a5750825482115b156105585760405163eb9bc44760e01b815260040160405180910390fd5b6000610565600184610660565b905083600001818154811061057c5761057c610681565b906000526020600020015491505092915050565b80356001600160a01b03811681146105a757600080fd5b919050565b6000602082840312156105be57600080fd5b61021782610590565b600080604083850312156105da57600080fd5b6105e383610590565b91506105f160208401610590565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561063b5783516001600160a01b031683529284019291840191600101610616565b50909695505050505050565b60006020828403121561065957600080fd5b5035919050565b8181038181111561018f57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212202059739b9e8466318d07e4fb3ad4fcc4f32c8c4a8716af5292bff3e2c211df1164736f6c63430008160033";

type AddressSetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressSetMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressSetMock__factory extends ContractFactory {
  constructor(...args: AddressSetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AddressSetMock> {
    return super.deploy(overrides || {}) as Promise<AddressSetMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressSetMock {
    return super.attach(address) as AddressSetMock;
  }
  override connect(signer: Signer): AddressSetMock__factory {
    return super.connect(signer) as AddressSetMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressSetMockInterface {
    return new utils.Interface(_abi) as AddressSetMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressSetMock {
    return new Contract(address, _abi, signerOrProvider) as AddressSetMock;
  }
}
