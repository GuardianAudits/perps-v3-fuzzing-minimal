/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UintSetMock,
  UintSetMockInterface,
} from "../../../../mocks/utils/SetUtilMock.sol/UintSetMock";

const _abi = [
  {
    inputs: [],
    name: "PositionOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueAlreadyInSet",
    type: "error",
  },
  {
    inputs: [],
    name: "ValueNotInSet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "contains",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "positionOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "replace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "valueAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "values",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610647806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063971217b71161005b578063971217b7146100e3578063c34052e0146100f8578063e81cf24c1461011b578063fe092b0e1461012e57600080fd5b80631003e2d21461008d5780631f7b6d32146100a257806346f96023146100bd5780634cc82215146100d0575b600080fd5b6100a061009b366004610545565b610141565b005b6100aa61014f565b6040519081526020015b60405180910390f35b6100aa6100cb366004610545565b610160565b6100a06100de366004610545565b610172565b6100eb61017d565b6040516100b4919061055e565b61010b610106366004610545565b610189565b60405190151581526020016100b4565b6100a06101293660046105a2565b610195565b6100aa61013c366004610545565b6101a5565b61014c6000826101b1565b50565b600061015b60006101bb565b905090565b600061016c81836101c5565b92915050565b61014c6000826101d8565b606061015b60006101e2565b600061016c81836101ef565b6101a160008383610207565b5050565b600061016c8183610217565b6101a18282610229565b600061016c825490565b60006101d18383610282565b9392505050565b6101a182826102c7565b606060006101d1836103c6565b600081815260018301602052604081205415156101d1565b610212838383610422565b505050565b60006101d161022684846104e0565b90565b6000818152600183016020526040902054156102585760405163682ad32d60e01b815260040160405180910390fd5b81546001818101845560008481526020808220909301849055845493815293019052604090912055565b60008181526001830160205260408120546102b05760405163b3dbc29360e01b815260040160405180910390fd5b506000908152600191909101602052604090205490565b6000818152600183016020526040812054908190036102f95760405163b3dbc29360e01b815260040160405180910390fd5b60006103066001836105c4565b845490915060009061031a906001906105c4565b905080821461037f57600085600001828154811061033a5761033a6105e5565b906000526020600020015490508086600001848154811061035d5761035d6105e5565b6000918252602080832090910192909255918252600187019052604090208390555b8454859080610390576103906105fb565b60019003818190600052602060002001600090559055846001016000858152602001908152602001600020600090555050505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561041657602002820191906000526020600020905b815481526020019060010190808311610402575b50505050509050919050565b60008281526001840160205260409020546104505760405163b3dbc29360e01b815260040160405180910390fd5b60008181526001840160205260409020541561047f5760405163682ad32d60e01b815260040160405180910390fd5b600082815260018085016020526040822080549083905591906104a290836105c4565b9050828560000182815481106104ba576104ba6105e5565b600091825260208083209091019290925593845260019095019094526040909120555050565b60008115806104ef5750825482115b1561050d5760405163eb9bc44760e01b815260040160405180910390fd5b600061051a6001846105c4565b9050836000018181548110610531576105316105e5565b906000526020600020015491505092915050565b60006020828403121561055757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156105965783518352928401929184019160010161057a565b50909695505050505050565b600080604083850312156105b557600080fd5b50508035926020909101359150565b8181038181111561016c57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212204e6caf17a7db4323b0f8c973725f985baa3e6f2ac1d897f22d609ff1d596ef7364736f6c63430008160033";

type UintSetMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UintSetMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UintSetMock__factory extends ContractFactory {
  constructor(...args: UintSetMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<UintSetMock> {
    return super.deploy(overrides || {}) as Promise<UintSetMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UintSetMock {
    return super.attach(address) as UintSetMock;
  }
  override connect(signer: Signer): UintSetMock__factory {
    return super.connect(signer) as UintSetMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UintSetMockInterface {
    return new utils.Interface(_abi) as UintSetMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UintSetMock {
    return new Contract(address, _abi, signerOrProvider) as UintSetMock;
  }
}
