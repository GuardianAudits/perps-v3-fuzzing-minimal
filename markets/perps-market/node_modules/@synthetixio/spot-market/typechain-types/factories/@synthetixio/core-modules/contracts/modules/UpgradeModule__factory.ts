/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradeModule,
  UpgradeModuleInterface,
} from "../../../../../@synthetixio/core-modules/contracts/modules/UpgradeModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ImplementationIsSterile",
    type: "error",
  },
  {
    inputs: [],
    name: "NoChange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contr",
        type: "address",
      },
    ],
    name: "NotAContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UpgradeSimulationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "self",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "getImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "simulateUpgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610596806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633659cfe614610046578063aaf10f421461005b578063c7f62cda1461007f575b600080fd5b610059610054366004610501565b610092565b005b6100636100a6565b6040516001600160a01b03909116815260200160405180910390f35b61005961008d366004610501565b6100bf565b61009a6101d4565b6100a381610216565b50565b60006100b061033c565b546001600160a01b0316919050565b60006100c961033c565b80546001600160a01b038481166001600160a81b031983168117600160a01b1784556040805192909316602480840182905284518085039091018152604490930184526020830180516001600160e01b0316631b2ce7f360e11b179052925193945091926000929161013a91610531565b600060405180830381855af49150503d8060008114610175576040519150601f19603f3d011682016040523d82523d6000602084013e61017a565b606091505b505090508015806101a55750816001600160a01b031661019861033c565b546001600160a01b031614155b156101c357604051631439f4b560e31b815260040160405180910390fd5b825460ff60a01b1916835560008080fd5b6101dc6103a8565b6001600160a01b0316336001600160a01b0316146102145760405163472511eb60e11b81523360048201526024015b60405180910390fd5b565b6001600160a01b03811661023d5760405163d92e233d60e01b815260040160405180910390fd5b803b610267576040516322a2d07b60e21b81526001600160a01b038216600482015260240161020b565b600061027161033c565b80549091506001600160a01b03908116908316036102a25760405163a88ee57760e01b815260040160405180910390fd5b8054600160a01b900460ff161580156102bf57506102bf826103b2565b156102e857604051631550430160e01b81526001600160a01b038316600482015260240161020b565b80546001600160a01b0319166001600160a01b038316908117825560405190815230907f5d611f318680d00598bb735d61bacf0c514c6b50e1e5ad30040a4df2b12791c79060200160405180910390a25050565b60008060405160200161038a9060208082526021908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e50726f786040820152607960f81b606082015260800190565b60408051601f19818403018152919052805160209091012092915050565b60006100b06104b1565b604080516001600160a01b03831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166363fb166d60e11b17905290516000918291829130916104099190610531565b600060405180830381855af49150503d8060008114610444576040519150601f19603f3d011682016040523d82523d6000602084013e610449565b606091505b5091509150811580156104a95750604051631439f4b560e31b602082015260240160405160208183030381529060405280519060200120816040516020016104919190610531565b60405160208183030381529060405280519060200120145b949350505050565b60008060405160200161038a9060208082526023908201527f696f2e73796e7468657469782e636f72652d636f6e7472616374732e4f776e61604082015262626c6560e81b606082015260800190565b60006020828403121561051357600080fd5b81356001600160a01b038116811461052a57600080fd5b9392505050565b6000825160005b818110156105525760208186018101518583015201610538565b50600092019182525091905056fea264697066735822122079e4ed952fcb51af79f8ebcc922078f780ff1bb8d71d980414899a5dba8d0b8364736f6c63430008160033";

type UpgradeModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeModule__factory extends ContractFactory {
  constructor(...args: UpgradeModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<UpgradeModule> {
    return super.deploy(overrides || {}) as Promise<UpgradeModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UpgradeModule {
    return super.attach(address) as UpgradeModule;
  }
  override connect(signer: Signer): UpgradeModule__factory {
    return super.connect(signer) as UpgradeModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeModuleInterface {
    return new utils.Interface(_abi) as UpgradeModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeModule {
    return new Contract(address, _abi, signerOrProvider) as UpgradeModule;
  }
}
