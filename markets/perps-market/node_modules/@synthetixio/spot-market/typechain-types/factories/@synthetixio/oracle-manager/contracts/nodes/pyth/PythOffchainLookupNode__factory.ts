/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PythOffchainLookupNode,
  PythOffchainLookupNodeInterface,
} from "../../../../../../@synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "oracleQuery",
        type: "bytes",
      },
    ],
    name: "OracleDataRequired",
    type: "error",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6087610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063aaf5eb68146038575b600080fd5b603f601281565b60405190815260200160405180910390f3fea26469706673582212206f663d7183d4274f79fc63dd40ce8d063f8b310794d32005895330c6f3819d1464736f6c63430008160033";

type PythOffchainLookupNodeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PythOffchainLookupNodeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PythOffchainLookupNode__factory extends ContractFactory {
  constructor(...args: PythOffchainLookupNodeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<PythOffchainLookupNode> {
    return super.deploy(overrides || {}) as Promise<PythOffchainLookupNode>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PythOffchainLookupNode {
    return super.attach(address) as PythOffchainLookupNode;
  }
  override connect(signer: Signer): PythOffchainLookupNode__factory {
    return super.connect(signer) as PythOffchainLookupNode__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PythOffchainLookupNodeInterface {
    return new utils.Interface(_abi) as PythOffchainLookupNodeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PythOffchainLookupNode {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PythOffchainLookupNode;
  }
}
