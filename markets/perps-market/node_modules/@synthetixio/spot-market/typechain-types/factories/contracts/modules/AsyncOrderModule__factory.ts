/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AsyncOrderModule,
  AsyncOrderModuleInterface,
} from "../../../contracts/modules/AsyncOrderModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationTime",
        type: "uint256",
      },
    ],
    name: "IneligibleForCancellation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "InsufficientSharesAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum Transaction.Type",
        name: "transactionType",
        type: "uint8",
      },
    ],
    name: "InvalidAsyncTransactionType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "asyncOrderId",
        type: "uint256",
      },
    ],
    name: "InvalidClaim",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minimumAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidCommitmentAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
    ],
    name: "InvalidMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "settlementStrategyId",
        type: "uint256",
      },
    ],
    name: "InvalidSettlementStrategy",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "asyncOrderId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settledAt",
        type: "uint256",
      },
    ],
    name: "OrderAlreadySettled",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowInt256ToUint256",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "uint128",
        name: "asyncOrderId",
        type: "uint128",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "id",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Transaction.Type",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amountEscrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settlementStrategyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitmentTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumSettlementAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settledAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct AsyncOrderClaim.Data",
        name: "asyncOrderClaim",
        type: "tuple",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "enum Transaction.Type",
        name: "orderType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountProvided",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "asyncOrderId",
        type: "uint128",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "OrderCommitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "asyncOrderId",
        type: "uint128",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "enum Transaction.Type",
        name: "orderType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amountProvided",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "settlementStrategyId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumSettlementAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "commitOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "id",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Transaction.Type",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amountEscrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settlementStrategyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitmentTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumSettlementAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settledAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
        ],
        internalType: "struct AsyncOrderClaim.Data",
        name: "asyncOrderClaim",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "marketId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "asyncOrderId",
        type: "uint128",
      },
    ],
    name: "getAsyncOrderClaim",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "id",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "enum Transaction.Type",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amountEscrowed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settlementStrategyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitmentTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minimumSettlementAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settledAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
        ],
        internalType: "struct AsyncOrderClaim.Data",
        name: "asyncOrderClaim",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AsyncOrderModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AsyncOrderModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AsyncOrderModule__factory extends ContractFactory {
  constructor(...args: AsyncOrderModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AsyncOrderModule> {
    return super.deploy(overrides || {}) as Promise<AsyncOrderModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AsyncOrderModule {
    return super.attach(address) as AsyncOrderModule;
  }
  override connect(signer: Signer): AsyncOrderModule__factory {
    return super.connect(signer) as AsyncOrderModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AsyncOrderModuleInterface {
    return new utils.Interface(_abi) as AsyncOrderModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AsyncOrderModule {
    return new Contract(address, _abi, signerOrProvider) as AsyncOrderModule;
  }
}
