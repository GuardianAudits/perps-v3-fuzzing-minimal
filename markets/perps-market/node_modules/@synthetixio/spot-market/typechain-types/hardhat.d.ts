/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessError__factory>;
    getContractFactory(
      name: "AddressError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressError__factory>;
    getContractFactory(
      name: "ChangeError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChangeError__factory>;
    getContractFactory(
      name: "InitError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InitError__factory>;
    getContractFactory(
      name: "ParameterError",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ParameterError__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IUUPSImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUUPSImplementation__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "AbstractProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbstractProxy__factory>;
    getContractFactory(
      name: "UUPSImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSImplementation__factory>;
    getContractFactory(
      name: "UUPSProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSProxy__factory>;
    getContractFactory(
      name: "UUPSProxyWithOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSProxyWithOwner__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Helper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Helper__factory>;
    getContractFactory(
      name: "DecimalMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecimalMath__factory>;
    getContractFactory(
      name: "SafeCastI128",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI128__factory>;
    getContractFactory(
      name: "SafeCastI256",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI256__factory>;
    getContractFactory(
      name: "SafeCastI32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI32__factory>;
    getContractFactory(
      name: "SafeCastI56",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI56__factory>;
    getContractFactory(
      name: "SafeCastI64",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastI64__factory>;
    getContractFactory(
      name: "SafeCastU128",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU128__factory>;
    getContractFactory(
      name: "SafeCastU256",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU256__factory>;
    getContractFactory(
      name: "SafeCastU32",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU32__factory>;
    getContractFactory(
      name: "SafeCastU56",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU56__factory>;
    getContractFactory(
      name: "SafeCastU64",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCastU64__factory>;
    getContractFactory(
      name: "SetUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SetUtil__factory>;
    getContractFactory(
      name: "IAssociatedSystemsModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssociatedSystemsModule__factory>;
    getContractFactory(
      name: "IDecayTokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDecayTokenModule__factory>;
    getContractFactory(
      name: "IFeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeatureFlagModule__factory>;
    getContractFactory(
      name: "INftModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INftModule__factory>;
    getContractFactory(
      name: "ITokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenModule__factory>;
    getContractFactory(
      name: "AssociatedSystemsModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssociatedSystemsModule__factory>;
    getContractFactory(
      name: "CoreModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreModule__factory>;
    getContractFactory(
      name: "DecayTokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DecayTokenModule__factory>;
    getContractFactory(
      name: "FeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeatureFlagModule__factory>;
    getContractFactory(
      name: "OwnerModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnerModule__factory>;
    getContractFactory(
      name: "TokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenModule__factory>;
    getContractFactory(
      name: "UpgradeModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeModule__factory>;
    getContractFactory(
      name: "AssociatedSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssociatedSystem__factory>;
    getContractFactory(
      name: "FeatureFlag",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeatureFlag__factory>;
    getContractFactory(
      name: "IMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarket__factory>;
    getContractFactory(
      name: "IOracleManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracleManager__factory>;
    getContractFactory(
      name: "IMarketCollateralModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketCollateralModule__factory>;
    getContractFactory(
      name: "IMarketManagerModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketManagerModule__factory>;
    getContractFactory(
      name: "IUtilsModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUtilsModule__factory>;
    getContractFactory(
      name: "CollateralMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollateralMock__factory>;
    getContractFactory(
      name: "IAggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAggregatorV3Interface__factory>;
    getContractFactory(
      name: "IExternalNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExternalNode__factory>;
    getContractFactory(
      name: "IPyth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPyth__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "INodeModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INodeModule__factory>;
    getContractFactory(
      name: "MockExternalNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockExternalNode__factory>;
    getContractFactory(
      name: "MockPythExternalNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPythExternalNode__factory>;
    getContractFactory(
      name: "ChainlinkNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkNode__factory>;
    getContractFactory(
      name: "PriceDeviationCircuitBreakerNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceDeviationCircuitBreakerNode__factory>;
    getContractFactory(
      name: "PythNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PythNode__factory>;
    getContractFactory(
      name: "PythOffchainLookupNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PythOffchainLookupNode__factory>;
    getContractFactory(
      name: "ReducerNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReducerNode__factory>;
    getContractFactory(
      name: "StalenessCircuitBreakerNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StalenessCircuitBreakerNode__factory>;
    getContractFactory(
      name: "UniswapNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapNode__factory>;
    getContractFactory(
      name: "NodeDefinition",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NodeDefinition__factory>;
    getContractFactory(
      name: "MockPythERC7412Wrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPythERC7412Wrapper__factory>;
    getContractFactory(
      name: "IChainlinkVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainlinkVerifier__factory>;
    getContractFactory(
      name: "IFeeCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeCollector__factory>;
    getContractFactory(
      name: "IPythERC7412Wrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPythERC7412Wrapper__factory>;
    getContractFactory(
      name: "ISynthetixSystem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetixSystem__factory>;
    getContractFactory(
      name: "IAsyncOrderConfigurationModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAsyncOrderConfigurationModule__factory>;
    getContractFactory(
      name: "IAsyncOrderModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAsyncOrderModule__factory>;
    getContractFactory(
      name: "IAsyncOrderSettlementModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAsyncOrderSettlementModule__factory>;
    getContractFactory(
      name: "IAtomicOrderModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAtomicOrderModule__factory>;
    getContractFactory(
      name: "IMarketConfigurationModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketConfigurationModule__factory>;
    getContractFactory(
      name: "ISpotMarketFactoryModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISpotMarketFactoryModule__factory>;
    getContractFactory(
      name: "ISynthTokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthTokenModule__factory>;
    getContractFactory(
      name: "IWrapperModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWrapperModule__factory>;
    getContractFactory(
      name: "FeeCollectorMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeCollectorMock__factory>;
    getContractFactory(
      name: "MockPythERC7412Wrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPythERC7412Wrapper__factory>;
    getContractFactory(
      name: "AsyncOrderConfigurationModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncOrderConfigurationModule__factory>;
    getContractFactory(
      name: "AsyncOrderModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncOrderModule__factory>;
    getContractFactory(
      name: "AsyncOrderSettlementModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncOrderSettlementModule__factory>;
    getContractFactory(
      name: "AtomicOrderModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AtomicOrderModule__factory>;
    getContractFactory(
      name: "CoreModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CoreModule__factory>;
    getContractFactory(
      name: "FeatureFlagModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeatureFlagModule__factory>;
    getContractFactory(
      name: "MarketConfigurationModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketConfigurationModule__factory>;
    getContractFactory(
      name: "SpotMarketFactoryModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotMarketFactoryModule__factory>;
    getContractFactory(
      name: "SynthTokenModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SynthTokenModule__factory>;
    getContractFactory(
      name: "WrapperModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrapperModule__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "AsyncOrder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncOrder__factory>;
    getContractFactory(
      name: "AsyncOrderClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncOrderClaim__factory>;
    getContractFactory(
      name: "AsyncOrderConfiguration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AsyncOrderConfiguration__factory>;
    getContractFactory(
      name: "MarketConfiguration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketConfiguration__factory>;
    getContractFactory(
      name: "SettlementStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SettlementStrategy__factory>;
    getContractFactory(
      name: "SpotMarketFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotMarketFactory__factory>;
    getContractFactory(
      name: "Wrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wrapper__factory>;
    getContractFactory(
      name: "Transaction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transaction__factory>;

    getContractAt(
      name: "AccessError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessError>;
    getContractAt(
      name: "AddressError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressError>;
    getContractAt(
      name: "ChangeError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChangeError>;
    getContractAt(
      name: "InitError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InitError>;
    getContractAt(
      name: "ParameterError",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ParameterError>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IUUPSImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUUPSImplementation>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "AbstractProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbstractProxy>;
    getContractAt(
      name: "UUPSImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSImplementation>;
    getContractAt(
      name: "UUPSProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSProxy>;
    getContractAt(
      name: "UUPSProxyWithOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSProxyWithOwner>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Helper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Helper>;
    getContractAt(
      name: "DecimalMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecimalMath>;
    getContractAt(
      name: "SafeCastI128",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI128>;
    getContractAt(
      name: "SafeCastI256",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI256>;
    getContractAt(
      name: "SafeCastI32",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI32>;
    getContractAt(
      name: "SafeCastI56",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI56>;
    getContractAt(
      name: "SafeCastI64",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastI64>;
    getContractAt(
      name: "SafeCastU128",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU128>;
    getContractAt(
      name: "SafeCastU256",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU256>;
    getContractAt(
      name: "SafeCastU32",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU32>;
    getContractAt(
      name: "SafeCastU56",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU56>;
    getContractAt(
      name: "SafeCastU64",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCastU64>;
    getContractAt(
      name: "SetUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SetUtil>;
    getContractAt(
      name: "IAssociatedSystemsModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssociatedSystemsModule>;
    getContractAt(
      name: "IDecayTokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDecayTokenModule>;
    getContractAt(
      name: "IFeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeatureFlagModule>;
    getContractAt(
      name: "INftModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INftModule>;
    getContractAt(
      name: "ITokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenModule>;
    getContractAt(
      name: "AssociatedSystemsModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssociatedSystemsModule>;
    getContractAt(
      name: "CoreModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreModule>;
    getContractAt(
      name: "DecayTokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DecayTokenModule>;
    getContractAt(
      name: "FeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeatureFlagModule>;
    getContractAt(
      name: "OwnerModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnerModule>;
    getContractAt(
      name: "TokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenModule>;
    getContractAt(
      name: "UpgradeModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeModule>;
    getContractAt(
      name: "AssociatedSystem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssociatedSystem>;
    getContractAt(
      name: "FeatureFlag",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeatureFlag>;
    getContractAt(
      name: "IMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarket>;
    getContractAt(
      name: "IOracleManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracleManager>;
    getContractAt(
      name: "IMarketCollateralModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketCollateralModule>;
    getContractAt(
      name: "IMarketManagerModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketManagerModule>;
    getContractAt(
      name: "IUtilsModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUtilsModule>;
    getContractAt(
      name: "CollateralMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollateralMock>;
    getContractAt(
      name: "IAggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAggregatorV3Interface>;
    getContractAt(
      name: "IExternalNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IExternalNode>;
    getContractAt(
      name: "IPyth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPyth>;
    getContractAt(
      name: "IUniswapV3Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3Pool>;
    getContractAt(
      name: "INodeModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INodeModule>;
    getContractAt(
      name: "MockExternalNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockExternalNode>;
    getContractAt(
      name: "MockPythExternalNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPythExternalNode>;
    getContractAt(
      name: "ChainlinkNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkNode>;
    getContractAt(
      name: "PriceDeviationCircuitBreakerNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceDeviationCircuitBreakerNode>;
    getContractAt(
      name: "PythNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PythNode>;
    getContractAt(
      name: "PythOffchainLookupNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PythOffchainLookupNode>;
    getContractAt(
      name: "ReducerNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReducerNode>;
    getContractAt(
      name: "StalenessCircuitBreakerNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StalenessCircuitBreakerNode>;
    getContractAt(
      name: "UniswapNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapNode>;
    getContractAt(
      name: "NodeDefinition",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NodeDefinition>;
    getContractAt(
      name: "MockPythERC7412Wrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPythERC7412Wrapper>;
    getContractAt(
      name: "IChainlinkVerifier",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainlinkVerifier>;
    getContractAt(
      name: "IFeeCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeCollector>;
    getContractAt(
      name: "IPythERC7412Wrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPythERC7412Wrapper>;
    getContractAt(
      name: "ISynthetixSystem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthetixSystem>;
    getContractAt(
      name: "IAsyncOrderConfigurationModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAsyncOrderConfigurationModule>;
    getContractAt(
      name: "IAsyncOrderModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAsyncOrderModule>;
    getContractAt(
      name: "IAsyncOrderSettlementModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAsyncOrderSettlementModule>;
    getContractAt(
      name: "IAtomicOrderModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAtomicOrderModule>;
    getContractAt(
      name: "IMarketConfigurationModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketConfigurationModule>;
    getContractAt(
      name: "ISpotMarketFactoryModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISpotMarketFactoryModule>;
    getContractAt(
      name: "ISynthTokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthTokenModule>;
    getContractAt(
      name: "IWrapperModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWrapperModule>;
    getContractAt(
      name: "FeeCollectorMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeCollectorMock>;
    getContractAt(
      name: "MockPythERC7412Wrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockPythERC7412Wrapper>;
    getContractAt(
      name: "AsyncOrderConfigurationModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncOrderConfigurationModule>;
    getContractAt(
      name: "AsyncOrderModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncOrderModule>;
    getContractAt(
      name: "AsyncOrderSettlementModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncOrderSettlementModule>;
    getContractAt(
      name: "AtomicOrderModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AtomicOrderModule>;
    getContractAt(
      name: "CoreModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CoreModule>;
    getContractAt(
      name: "FeatureFlagModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeatureFlagModule>;
    getContractAt(
      name: "MarketConfigurationModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketConfigurationModule>;
    getContractAt(
      name: "SpotMarketFactoryModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotMarketFactoryModule>;
    getContractAt(
      name: "SynthTokenModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SynthTokenModule>;
    getContractAt(
      name: "WrapperModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WrapperModule>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "AsyncOrder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncOrder>;
    getContractAt(
      name: "AsyncOrderClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncOrderClaim>;
    getContractAt(
      name: "AsyncOrderConfiguration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AsyncOrderConfiguration>;
    getContractAt(
      name: "MarketConfiguration",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketConfiguration>;
    getContractAt(
      name: "SettlementStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SettlementStrategy>;
    getContractAt(
      name: "SpotMarketFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotMarketFactory>;
    getContractAt(
      name: "Wrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Wrapper>;
    getContractAt(
      name: "Transaction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Transaction>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
